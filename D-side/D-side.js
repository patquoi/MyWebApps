/*  Fichier: D-side.js  Sujet: Programme principal JavaScript    Version: <1.0>  Copyright (C) 2014 Patrice Fouquet.  */ //---------------------------------------------------------------------------------------// Constantes diverses//---------------------------------------------------------------------------------------const idPays = [[['AFG'],['Afghanistan.png'],['Afghanistan']],[['AGO'],['Angola.png'],['Angola']],[['ALB'],['Albania.png'],['Albanie']],[['ALG'],['Algeria.png'],['Algérie']],[['AND'],['Andorra.png'],['Andorre']],[['ARE'],['United_Arab_Emirates.png'],['Emirats Arabes Unis']],[['ARG'],['Argentina.png'],['Argentine']],[['ARM'],['Armenia.png'],['Arménie']],[['ATG'],['Antigua_and_Barbuda.png'],['Antigua-et-Barbuda']],[['AUS'],['Australia.png'],['Australie']],[['AUT'],['Austria.png'],['Autriche']],[['AZE'],['Azerbaijan.png'],['Azerbaïdjan']],[['BDI'],['Burundi.png'],['Burundi']],[['BEL'],['Belgium.png'],['Belgique']],[['BEN'],['Benin.png'],['Bénin']],[['BFA'],['Burkina_Faso.png'],['Burkina Faso']],[['BGD'],['Bangladesh.png'],['Bangladesh']],[['BGR'],['Bulgaria.png'],['Bulgarie']],[['BHR'],['Bahrain.png'],['Bahreïn']],[['BHS'],['Bahamas.png'],['Bahamas']],[['BIH'],['Bosnia_and_Herzegovina.png'],['Bosnie-Herzégovine']],[['BLR'],['Belarus.png'],['Belarus']],[['BLZ'],['Belize.png'],['Bélize']],[['BOL'],['Bolivia.png'],['Bolivie']],[['BRA'],['Brazil.png'],['Brésil']],[['BRB'],['Barbados.png'],['Barbades']],[['BRN'],['Brunei.png'],['Brunei']],[['BTN'],['Bhutan.png'],['Bhoutan']],[['BWA'],['Botswana.png'],['Botswana']],[['CAF'],['Central_African_Republic.png'],['République centrafricaine']],[['CAN'],['Canada.png'],['Canada']],[['CHE'],['Switzerland.png'],['Suisse']],[['CHL'],['Chile.png'],['Chili']],[['CHN'],['China.png'],['Chine']],[['CIV'],['Ivory_Coast.png'],['Côte d\'Ivoire']],[['CMR'],['Cameroon.png'],['Cameroun']],[['COD'],['Democratic_Republic_of_the_Congo.png'],['République Démocratique du Congo']],[['COG'],['Republic_of_the_Congo.png'],['République Populaire du Congo']],[['COK'],['Cook_Islands.png'],['Îles Cook']],[['COL'],['Colombia.png'],['Colombie']],[['COM'],['Comoros.png'],['Comores']],[['CPV'],['Cape_Verde.png'],['Cap Vert']],[['CRI'],['Costa_Rica.png'],['Costa-Rica']],[['CUB'],['Cuba.png'],['Cuba']],[['CYP'],['Cyprus.png'],['Chypre']],[['CZE'],['Czech_Republic.png'],['République Tchèque']],[['DEU'],['Germany.png'],['Allemagne']],[['DJI'],['Djibouti.png'],['Djibouti']],[['DMA'],['Dominica.png'],['Dominique']],[['DNK'],['Denmark.png'],['Danemark']],[['DOM'],['Dominican_Republic.png'],['République Dominicaine']],[['ECU'],['Ecuador.png'],['Equateur']],[['EGY'],['Egypt.png'],['Egypte']],[['ERI'],['Eritrea.png'],['Erythrée']],[['ESP'],['Spain.png'],['Espagne']],[['EST'],['Estonia.png'],['Estonie']],[['ETH'],['Ethiopia.png'],['Ethiopie']],[['FIN'],['Finland.png'],['Finlande']],[['FJI'],['Fiji.png'],['Fidji']],[['FRA'],['France.png'],['France']],[['FSM'],['Micronesia.png'],['Micronésie']],[['GAB'],['Gabon.png'],['Gabon']],[['GBR'],['United_Kingdom.png'],['Royaume-Uni']],[['GEO'],['Georgia.png'],['Géorgie']],[['GHA'],['Ghana.png'],['Ghana']],[['GIN'],['Guinea.png'],['Guinée']],[['GMB'],['Gambia.png'],['Gambie']],[['GNB'],['Guinea-Bissau.png'],['Guinée-Bissau']],[['GNQ'],['Equatorial_Guinea.png'],['Guinée équatoriale']],[['GRC'],['Greece.png'],['Grèce']],[['GRD'],['Grenada.png'],['Grenade']],[['GTM'],['Guatemala.png'],['Guatemala']],[['GUY'],['Guyana.png'],['Guyana']],[['HND'],['Honduras.png'],['Honduras']],[['HRV'],['Croatia.png'],['Croatie']],[['HTI'],['Haiti.png'],['Haïti']],[['HUN'],['Hungary.png'],['Hongrie']],[['IDN'],['Indonesia.png'],['Indonésie']],[['IND'],['India.png'],['Inde']],[['IRL'],['Ireland.png'],['Irlande']],[['IRN'],['Iran.png'],['Iran']],[['IRQ'],['Iraq.png'],['Iraq']],[['ISL'],['Iceland.png'],['Islande']],[['ISR'],['Israel.png'],['Israël']],[['JAM'],['Jamaica.png'],['Jamaïque']],[['JOR'],['Jordan.png'],['Jordanie']],[['JPN'],['Japan.png'],['Japon']],[['KAZ'],['Kazakhstan.png'],['Kazakhstan']],[['KEN'],['Kenya.png'],['Kenya']],[['KGZ'],['Kyrgyzstan.png'],['Kirghizistan']],[['KHM'],['Cambodia.png'],['Cambodge']],[['KIR'],['Kiribati.png'],['Kiribati']],[['KNA'],['Saint_Kitts_and_Nevis.png'],['Saint-Christophe-et-Niévès']],[['KOR'],['South_Korea.png'],['Corée du sud']],[['KWT'],['Kuwait.png'],['Koweït']],[['LAO'],['Laos.png'],['Laos']],[['LBN'],['Lebanon.png'],['Liban']],[['LBR'],['Liberia.png'],['Libéria']],[['LBY'],['Libya.png'],['Libye']],[['LCA'],['Saint_Lucia.png'],['Sainte-Lucie']],[['LIE'],['Liechtenstein.png'],['Liechtenstein']],[['LKA'],['Sri_Lanka.png'],['Sri Lanka']],[['LSO'],['Lesotho.png'],['Lesotho']],[['LTU'],['Lithuania.png'],['Lituanie']],[['LUX'],['Luxembourg.png'],['Luxembourg']],[['LVA'],['Latvia.png'],['Lettonie']], // Lettonie[['MAR'],['Morocco.png'],['Maroc']],[['MCO'],['Monaco.png'],['Monaco']],[['MDA'],['Moldova.png'],['Moldavie']],[['MDG'],['Madagascar.png'],['Madagascar']],[['MDV'],['Maldives.png'],['Maldives']],[['MEX'],['Mexico.png'],['Mexique']],[['MHL'],['Marshall_Islands.png'],['Îles Marshall']],[['MKD'],['Macedonia.png'],['Macédoine']],[['MLI'],['Mali.png'],['Mali']],[['MLT'],['Malta.png'],['Malte']],[['MMR'],['Myanmar.png'],['Birmanie']],[['MNE'],['Montenegro.png'],['Monténégro']],[['MNG'],['Mongolia.png'],['Mongolie']],[['MOZ'],['Mozambique.png'],['Mozambique']],[['MRT'],['Mauritania.png'],['Mauritanie']],[['MUS'],['Mauritius.png'],['Maurice']],[['MWI'],['Malawi.png'],['Malawi']],[['MYS'],['Malaysia.png'],['Malaisie']],[['NAM'],['Namibia.png'],['Namibie']],[['NER'],['Niger.png'],['Niger']],[['NGA'],['Nigeria.png'],['Nigéria']],[['NIC'],['Nicaragua.png'],['Nicaragua']],[['NIU'],['Niue.png'],['Niue']],[['NLD'],['Netherlands.png'],['Pays-Bas']],[['NOR'],['Norway.png'],['Norvège']],[['NPL'],['Nepal.png'],['Népal']],[['NRU'],['Nauru.png'],['Nauru']],[['NZL'],['New_Zealand.png'],['Nouvelle Zélande']],[['OMN'],['Oman.png'],['Oman']],[['PAK'],['Pakistan.png'],['Pakistan']],[['PAN'],['Panama.png'],['Panama']],[['PER'],['Peru.png'],['Pérou']],[['PHL'],['Philippines.png'],['Philippines']],[['PLW'],['Palau.png'],['Palau']],[['PNG'],['Papua_New_Guinea.png'],['Papouasie-Nouvelle-Guinée']],[['POL'],['Poland.png'],['Pologne']],[['PRK'],['North_Korea.png'],['Corée du nord']],[['PRT'],['Portugal.png'],['Portugal']],[['PRY'],['Paraguay.png'],['Paraguay']],//[['PSE'],['Palestine.png'],['Palestine']], // Membre observateur à l'ONU[['QAT'],['Qatar.png'],['Qatar']],[['ROU'],['Romania.png'],['Roumanie']],[['RUS'],['Russia.png'],['Russie']],[['RWA'],['Rwanda.png'],['Rwanda']],[['SAU'],['Saudi_Arabia.png'],['Arabie Saoudite']],[['SDN'],['Sudan.png'],['Soudan']],[['SEN'],['Senegal.png'],['Sénégal']],[['SGP'],['Singapore.png'],['Singapour']],[['SLB'],['Solomon_Islands.png'],['Salomon']],[['SLE'],['Sierra_Leone.png'],['Sierra Leone']],[['SLV'],['El_Salvador.png'],['Salvador']],[['SMR'],['San_Marino.png'],['Saint-Marin']],[['SOM'],['Somalia.png'],['Somalie']],[['SRB'],['Serbia.png'],['Serbie']],[['SSD'],['South_Sudan.png'],['Sud-Soudan']],[['STP'],['Sao_Tome_and_Principe.png'],['Sao-Tomé-et-Principe']],[['SUR'],['Suriname.png'],['Surinam']],[['SVK'],['Slovakia.png'],['Slovaquie']],[['SVN'],['Slovenia.png'],['Slovénie']],[['SWE'],['Sweden.png'],['Suède']],[['SWZ'],['Swaziland.png'],['Swaziland']],[['SYC'],['Seychelles.png'],['Seychelles']],[['SYR'],['Syria.png'],['Syrie']],[['TCD'],['Chad.png'],['Tchad']],[['TGO'],['Togo.png'],['Togo']],[['THA'],['Thailand.png'],['Thaïlande']],[['TIA'],['Italy.png'],['Italie']],[['TJK'],['Tajikistan.png'],['Tadjikistan']],[['TKM'],['Turkmenistan.png'],['Turkmenistan']],[['TLS'],['East_Timor.png'],['Timor']],[['TON'],['Tonga.png'],['Tonga']],[['TTO'],['Trinidad_and_Tobago.png'],['Trinidad-et-Tobago']],[['TUN'],['Tunisia.png'],['Tunisie']],[['TUR'],['Turkey.png'],['Turquie']],[['TUV'],['Tuvalu.png'],['Tuvalu']],[['TZA'],['Tanzania.png'],['Tanzanie']],[['UGA'],['Uganda.png'],['Ouganda']],[['UKR'],['Ukraine.png'],['Ukraine']],[['URY'],['Uruguay.png'],['Uruguay']],[['USA'],['United_States.png'],['Etats-Unis']],[['UZB'],['Uzbekistan.png'],['Ouzbekistan']],//[['VAT'],['Vatican_City.png'],['Vatican']] // Membre observateur à l'ONU[['VCT'],['Saint_Vincent_and_the_Grenadines.png'],['Saint-Vincent-et-Grenadines']],[['VEN'],['Venezuela.png'],['Venezuela']],[['VNM'],['Vietnam.png'],['Vietnam']],[['VUT'],['Vanuatu.png'],['Vanuatu']],[['WSM'],['Samoa.png'],['Samoa']],[['YEM'],['Yemen.png'],['Yemen']],[['ZAF'],['South_Africa.png'],['Afrique du sud']],[['ZMB'],['Zambia.png'],['Zambie']],[['ZWE'],['Zimbabwe.png'],['Zimbabwe']]];// Rencontres Premier tour, groupes de 5const mt1 = [[[0,1],[2,3]], // mt1[journée][match][équipe], journée = 0~9, match = 0|1, équipe = 0|1	         [[1,2],[3,4]],	         [[3,0],[4,2]],	         [[0,4],[1,3]],	         [[2,0],[4,1]],             [[1,0],[3,2]], // Matches retour	         [[2,1],[4,3]],	         [[0,3],[2,4]],	         [[4,0],[3,1]],	         [[0,2],[1,4]]];// Rencontres Deuxième tour, groupes de 6const mt2 = [[[0,1],[2,3],[4,5]], // mt2[journée][match][équipe], journée = 0~9, match = 0~2, équipe = 0|1             [[1,2],[3,4],[5,0]],             [[2,0],[4,1],[3,5]],             [[0,4],[1,3],[5,2]],             [[1,5],[2,4],[3,0]],	         [[1,0],[3,2],[5,4]], // Matches retour             [[2,1],[4,3],[0,5]],             [[0,2],[1,4],[5,3]],             [[4,0],[3,1],[2,5]],             [[5,1],[4,2],[0,3]]];// Rencontres Eliminatoires mte[ar][nf][mtch][eq]const mte = [[[	[ 0, 1],[ 2, 3],[ 4, 5],[ 6, 7],				[ 8, 9],[10,11],[12,13],[14,15],				[16,17],[18,19],[20,21],[22,23],				[24,25],[26,27],[28,29],[30,31]],			  [	[ 0,15],[ 1,14],[ 2,13],[ 3,12],			 	[ 4,11],[ 5,10],[ 6, 9],[ 7, 8]],			  [	[0,7],[2,5],[3,4],[6,7]],			  [	[0,2],[1,3]], [[0,1]]],			 [[	[ 1, 0],[ 3, 2],[ 5, 4],[ 7, 6],				[ 9, 8],[11,10],[13,12],[15,14],				[17,16],[19,18],[21,20],[23,22],				[25,24],[27,26],[29,28],[31,30]],			  [	[15, 0],[14, 1],[13, 2],[12, 3],			 	[11, 4],[10, 5],[ 9, 6],[ 8, 7]],			  [	[7,0],[5,2],[4,3],[7,6]],			  [	[2,0],[3,1]], [[1,0]]]];				            // Tour éliminatoire (phase 3)const seiziemes = 0;const huitiemes = 1;const quarts = 2;const demies = 3;const finale = 4;const frqDes   = 100; // temps d'affichage des désconst indefini = -1;const iso		= 0;const png		= 1;const fra		= 2;const pngExt 	= '.png';const pngChm 	= 'png/';const pngChmChf = 'png/chf/';const pngChmFlg = 'png/flg/';const pngChmMsg = 'png/msg/';const vide = '';const idVide 	= '-';const idJoueur 	= 'j';const idIso		= 'i';const idTalon = 't';const idCamp 	= ' gd';const idDes = 'd';const idStop = 'stop';const idCampCrt = 'camp';const idTour	= 'tour';const idMoins = 'moins';const idPoint = 'point';const idSlash = 'slash';const idGagnant = 'v';const idPerdant = 'l';const idRouge = 'r';const idScorePartie = 'p';const idScoreManche = 'm';const idPfxMsg      = 'm';const idSfxNoir		= 'l';const idSfxMgta		= 'v';// Partie en coursconst total		= 0;const jogauche 	= 1;const jodroite 	= 2;// Organisation (classements, résultats de matches)const eqgauche	= 0;const eqdroite	= 1;const aller		= 0;const retour	= 1;const nbDesMax 		= 9;const valDeMax		= 6;const nbCamps 		= 2;const nbPays 		= 195;//---------------------------------------------------------------------------------------// Variables de jeu//---------------------------------------------------------------------------------------var des = [0,0,0,0,0,0,0,0,0]; // undefined = à ne pas lancer; 0 = à lancer sinon résultat du dé : 1~9var camp = 0; // 0 = indéfini ; 1 = jogauche ; 2 = jodroite;var phase = 0; // Phase 1 = tour 1 ; phase 2 = tour 2;var stopDes = true;var caRoule = false;var match = new creeTypeMatch();var tour1 = new creeTypeTour1();var tour2 = new creeTypeTour2();var elim = new creeTypeElim();//---------------------------------------------------------------------------------------// Méthodes de classes//---------------------------------------------------------------------------------------function initialiseDes(){	camp = 0;	stopDes = true;	for(var i=0; i<nbDesMax; i++)		des[i]=0;}//---------------------------------------------------------------------------------------function afficheDesLances(d) // si d = undefined alors on affiche tous les dés sinon d = 0~8{	if (d==undefined) 		for(var i=0; i<nbDesMax; i++)			afficheDesLances(i);	else		if (des[d]==undefined)			document.images[idDes + (d+1)].src = pngChm + idVide + pngExt;		else			document.images[idDes + (d+1)].src = pngChm + des[d] + pngExt;}//---------------------------------------------------------------------------------------function rouleDes(){	if (caRoule) return;	caRoule=true;	for(var i=0; i<nbDesMax; i++) {		if (des[i]!=undefined) {			des[i]=1+Math.floor(valDeMax*Math.random());			afficheDesLances(i);		}	}	caRoule=false;	if ((!stopDes)&&((!match.automate())||(Math.floor(4*Math.random())<2)))		setTimeout( function() { rouleDes();},					frqDes);	else 		if (match.automate()) {			stoppeDes();			match.choisitAuto();		}}//---------------------------------------------------------------------------------------function lanceDes(){  stopDes=false;  document.images[idStop].src = pngChm + idStop + pngExt;  rouleDes();}//---------------------------------------------------------------------------------------function stoppeDes(){	stopDes=true;	document.images[idStop].src = pngChm + idVide + pngExt;}//---------------------------------------------------------------------------------------function choisitDe(d) // d = 0~8{	if ((des[d]>0)&&(des[d]<=valDeMax)&&((camp==jogauche)||(camp==jodroite))) {		if ((match.cd[camp]==0)&&(match.cd[jodroite+jogauche-camp]!=des[d])) { // Le dé du camp n'est pas encore désigné			match.cd[camp]=des[d];			match.afficheChoixDe(camp);		}		if (match.cd[camp]==des[d]) { // Le dé est celui du joueur courant			match.sm[camp][match.m]++; 			match.sm[total][match.m]++;			match.afficheScoreManche(camp,match.m);			des[d] = undefined; // On déplace les dés dans les dés gagnés			match.des--;			afficheDesLances(d);			match.afficheDesGagnes(camp);			if (!match.des) {				if (match.sm[camp][match.m]>match.sm[jodroite+jogauche-camp][match.m]) match.sp[camp]++;				if (match.sm[camp][match.m]<match.sm[jodroite+jogauche-camp][match.m]) match.sp[jodroite+jogauche-camp]++;				if (match.sm[camp][match.m]!=match.sm[jodroite+jogauche-camp][match.m]) match.sp[total]++;				match.afficheScorePartie();				match.m++;				match.initialiseManche();			}		} 		else if ((match.cd[jodroite+jogauche-camp]==des[d])&&(match.sm[jodroite+jogauche-camp][match.m]>0)&&(match.cd[camp]>0)) { // Le dé est celui du joueur adverse			match.sm[jodroite+jogauche-camp][match.m]--; 			match.sm[total][match.m]--;			match.afficheScoreManche(jodroite+jogauche-camp,match.m);			match.afficheDesGagnes(jodroite+jogauche-camp);			//alert("t("+nbDesMax+"-"+match.des+"-"+match.sm[total][match.m]+"-1)="+des[d]);			match.t[nbDesMax-match.des-match.sm[total][match.m]-1]=des[d];			match.afficheDesARejouer();			des[d] = 0; // On NE déplace le dés choisi mais on empêche de le choisir à nouveau			afficheDesLances(d);		} 			}}//---------------------------------------------------------------------------------------// TYPE MATCH//---------------------------------------------------------------------------------------function creeTypeMatch(){	this.auto = false;	this.stopPartie = false;	this.des = nbDesMax;	this.p = [indefini, indefini, indefini]; // Pays. Commence à 0.	this.cd = [0,0,0]; // Dés choisis. Commence à 1 si défini.	this.m = indefini; // manche courante. Commence à 0.	this.sp = [0,0,0]; // Score partie. Usage : sp[camp] avec sp[0]=sp[1]+sp[2].	this.sm = [[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0]]; // score manche. Usage : sm[camp][manche] avec sm[0]=sm[1]+sm[2];	this.t = [undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined,undefined]; // Dés à rejouer (talon)	this.initialise = matchInitialise;	this.initialiseManche = matchInitialiseManche;	this.joueAuto = matchJoueAuto;	this.choisitAuto = matchChoisitAuto;	this.afficheScorePartie = matchAfficheScorePartie;	this.afficheScoreManche = matchAfficheScoreManche;	this.afficheCamps = matchAfficheCamps;	this.afficheChoixDe = matchAfficheChoixDe;	this.afficheDesGagnes = matchAfficheDesGagnes;	this.afficheDesARejouer = matchAfficheDesARejouer;	this.changeCamp = matchChangeCamp;	this.automate = matchAutomate;}//---------------------------------------------------------------------------------------function matchAutomate(){ // AUTOMATE : Mettre en commentaire jusqu'avant le dernier return  // /*	if (((camp==0)&&(this.p[jogauche]==59))||(this.p[camp]==59)) // FRA		return false;	else // */		return this.auto;}//---------------------------------------------------------------------------------------function matchChangeCamp(){	if (this.stopPartie) {		if (this.auto) this.auto = false;  		document.images[idCampCrt].src = pngChm + idStop + pngExt;  		switch(phase) {  			case 1:	tour1.enregistrePartie();  					tour1.joueMatchSuivant();  					break;  			case 2:	tour2.enregistrePartie();  					tour2.joueMatchSuivant();  					break;  		}  	}	else {		if ((camp!=jogauche)&&(camp!=jodroite))   			camp=jogauche;   		else   			camp=jodroite+jogauche-camp;		if ((camp==jodroite)&&(this.cd[jogauche]==0)) { // anomalie : on ne doit pas jouer tant que jogauche n'a pas choisi...			this.changeCamp();			return;		}		document.images[idCampCrt].src = pngChmFlg + idPays[match.p[camp]][png];		lanceDes();	}}//---------------------------------------------------------------------------------------function matchJoueAuto(idPaysGauche, idPaysDroite) { 	this.initialise(idPaysGauche, idPaysDroite); 	this.auto = true; 	this.changeCamp();}//---------------------------------------------------------------------------------------function matchChoisitAuto(){	// On choisit un dé si ce n'est pas encore le cas	if (this.cd[camp]==0) {		var n = [0,0,0,0,0,0,0,0,0,0];		for(var i=0; i<nbDesMax; i++)			if (des[i]!=this.cd[jodroite+jogauche-camp])				n[des[i]]++;		var nMax = 0;		for(var i=0; i<nbDesMax; i++)			if (n[i]>nMax)	nMax=n[i];		choixValDe = 0;		for(var i=0; (i<nbDesMax)&&(!choixValDe); i++)			if (n[i]==nMax) choixValDe=i;		//alert('des='+des+',nMax='+nMax+', n='+n+',choixValDe='+choixValDe);		for(var i=0; i<nbDesMax; i++)			if (des[i]==choixValDe)				clicAuto(i+1);	} 	else		for(var i=0; i<nbDesMax; i++)			if (des[i]>0)				if ((des[i]==this.cd[camp])||(des[i]==this.cd[jodroite+jogauche-camp]))					clicAuto(i+1);	this.changeCamp();}//---------------------------------------------------------------------------------------function matchInitialise(idPaysGauche, idPaysDroite) {	initialiseDes();	this.stopPartie = false;	this.p[1]=idPaysGauche;	this.p[2]=idPaysDroite;	this.des = nbDesMax;  	this.m = 0;	for(var i=0; i<=nbCamps; i++) {		this.cd[i] = 0;		this.sp[i] = 0;		for(var j=0; j<nbDesMax; j++)			this.sm[i][j] = 0;	}	for(var i=0; i<nbDesMax; i++)		this.t[i] = undefined;	this.afficheCamps();	  	this.afficheChoixDe();  	this.afficheDesGagnes();  	this.afficheDesARejouer();  	this.afficheScoreManche();  	this.afficheScorePartie();}//---------------------------------------------------------------------------------------function matchInitialiseManche(){	this.des = 0;	for(var i=0; i<nbDesMax; i++) { // On charge les dés à rejouer		des[i] = this.t[i];		if (des[i] != undefined) this.des++;		this.t[i] = undefined;	}  	this.afficheDesGagnes();  	this.afficheDesARejouer();  	if (this.des == 0) {  		this.stopPartie = true;		if (this.auto) this.auto = false;  		document.images[idCampCrt].src = pngChm + idStop + pngExt;  		switch(phase) {  			case 1:	tour1.enregistrePartie();  					tour1.joueMatchSuivant();  					break;  			case 1:	tour2.enregistrePartie();  					tour2.joueMatchSuivant();  					break;  		}  	}   	else {  	  	this.afficheScoreManche();  		this.changeCamp();  	}}//---------------------------------------------------------------------------------------function matchAfficheScorePartie(c) // c=camp. Si camp indefini, afficher pour les deux joueurs.{	if (c==undefined) {		this.afficheScorePartie(jogauche);		this.afficheScorePartie(jodroite);	}	else		document.images[idScorePartie + idCamp[c]].src = pngChmChf + this.sp[c] + pngExt;}//---------------------------------------------------------------------------------------function matchAfficheScoreManche(c,m) // c=camp. Si camp indefini, afficher pour les deux joueurs. Si manche indéfinie, idem{	if (c==undefined) {		this.afficheScoreManche(jogauche);		this.afficheScoreManche(jodroite);	}	else		if (m==undefined)	  		for(var i=0; i<nbDesMax; i++)	  			this.afficheScoreManche(c,i);	  	else {			document.images[idScoreManche + m + idCamp[c]].src = pngChmChf + (this.m == undefined ? idVide : (m <= this.m ? this.sm[c][m] : idVide)) + pngExt;	  		var sm = 0;	  		for(var i=0; i<=m; i++) 	  			sm += this.sm[c][i];	  		document.images[idScoreManche + idCamp[c]].src = pngChmChf + sm + pngExt;		}}//---------------------------------------------------------------------------------------function matchAfficheCamps() {	for(var c=1; c<=nbCamps; c++) {		document.images[idJoueur + idCamp[c]].src = pngChmFlg + idPays[this.p[c]][png];		for(var j=0; j<3; j++) 			document.images[idIso + idCamp[c] + (j+1)].src = pngChmMsg + idPfxMsg + String(idPays[this.p[c]][iso]).substring(j,j+1) + idSfxNoir + pngExt;	}}//---------------------------------------------------------------------------------------function matchAfficheDesGagnes(c) {	if (c == undefined) {		this.afficheDesGagnes(jogauche);		this.afficheDesGagnes(jodroite);	}	else {		for(var i=0; i<this.sm[c][this.m]; i++)			document.images[(i+1) + idCamp[c]].src = pngChm + this.cd[c] + pngExt;		for(var i=this.sm[c][this.m]; i<nbDesMax; i++)			document.images[(i+1) + idCamp[c]].src = pngChm + idVide + pngExt;	}}//---------------------------------------------------------------------------------------function matchAfficheDesARejouer(c) {	if (c == undefined) {		this.afficheDesARejouer(jogauche);		this.afficheDesARejouer(jodroite);	}	else {		for(var i=0; i<nbDesMax; i++)			document.images[idTalon + (i+1)].src = pngChm + ((this.t[i]>0)&&(this.t[i]<=valDeMax) ? this.t[i] : idVide) + pngExt;	}}//---------------------------------------------------------------------------------------function matchAfficheChoixDe(c) {	if (c == undefined) {		this.afficheChoixDe(jogauche);		this.afficheChoixDe(jodroite);	}	else		document.images[idDes + idCamp[c]].src = pngChm + this.cd[c] + pngExt;}//---------------------------------------------------------------------------------------// T O U R   1 //---------------------------------------------------------------------------------------//---------------------------------------------------------------------------------------// MATCH GROUPE TOUR 1//---------------------------------------------------------------------------------------function creeTypeMtchGrp1(g, j, m){ // Les équipes sont accessibles depuis les numéros ci-dessous	this.g = g; // N° de groupe pour accès interne	this.j = j;// N° de journée	this.m = m; // N° de match dans la journée  //----------  // Résultats  //----------  	this.sm = [0, 0]; // Manches gagnées par les équipes  	this.sd = [0, 0]; // dés gagnés par les équipes  	this.affecte = mtchGrp1Affecte;  	this.affiche = mtchGrp1Affiche;}//---------------------------------------------------------------------------------------function mtchGrp1Affecte(smg, smd, sdg, sdd) {  	this.sm[0] = smg;  	this.sm[1] = smd;  	this.sd[0] = sdg;  	this.sd[1] = sdd;  	this.affiche();}//---------------------------------------------------------------------------------------function mtchGrp1Affiche(){	// Drapeaux	document.images[(2*(this.j%5)+this.m+1)+'mgd'].src = pngChmFlg + idPays[tour1.gp[this.g][mt1[this.j][this.m][eqgauche]]][png];	document.images[(2*(this.j%5)+this.m+1)+'mdd'].src = pngChmFlg + idPays[tour1.gp[this.g][mt1[this.j][this.m][eqdroite]]][png];	// Scores	document.images[(2*(this.j%5)+this.m+1)+'mgs'].src = pngChmMsg + idPfxMsg + (this.sm[eqgauche]==indefini?idVide:this.sm[eqgauche]) + (this.sm[eqgauche]>this.sm[jodroite]?idSfxMgta:idSfxNoir) + pngExt;	document.images[(2*(this.j%5)+this.m+1)+'mds'].src = pngChmMsg + idPfxMsg + (this.sm[eqdroite]==indefini?idVide:this.sm[eqdroite]) + (this.sm[eqdroite]>this.sm[jogauche]?idSfxMgta:idSfxNoir) + pngExt;	// Dés	document.images[(2*(this.j%5)+this.m+1)+'mgm'].src = pngChmMsg + idPfxMsg + (this.sd[eqgauche]==indefini?idVide:this.sd[eqgauche]) + (this.sd[eqgauche]>this.sd[jodroite]?idSfxMgta:idSfxNoir) + pngExt;	document.images[(2*(this.j%5)+this.m+1)+'mdm'].src = pngChmMsg + idPfxMsg + (this.sd[eqdroite]==indefini?idVide:this.sd[eqdroite]) + (this.sd[eqdroite]>this.sd[jogauche]?idRouge:idSfxNoir) + pngExt;}//---------------------------------------------------------------------------------------// TYPE CLASSEMENT TOUR 1//---------------------------------------------------------------------------------------function creeTypeClsTour1(g){	this.g = g; // Groupe courant	this.pts = [0,0,0,0,0]; // Pts : 1 pt par victoire	this.smp = [0,0,0,0,0]; // Manches Pour	this.smc = [0,0,0,0,0]; // Manches Contre	this.sdp = [0,0,0,0,0]; // Dés Pour	this.sdc = [0,0,0,0,0]; // Dés Contre	this.pos = [1,1,1,1,1]; // Classement (1~5)	this.calcule = clsTour1Calcule;	this.affiche = clsTour1Affiche;}//---------------------------------------------------------------------------------------function clsTour1Affiche(){	for(var p=1; p<=5; p++)		for(var i=0; i<5; i++)			if (this.pos[i]==p) {				//alert(p+'. '+idPays[tour1.gp[this.g][i]][iso]+' avec '+this.pts[i]+' pts, '+this.smp[i]+'-'+this.smc[i]+' ('+this.sdp[i]+'-'+this.sdc[i]+')');				document.images[p+  'p'].src = pngChmFlg + idPays[tour1.gp[this.g][i]][png];				document.images[p+ 'i1'].src = pngChmMsg + idPfxMsg + String(idPays[tour1.gp[this.g][i]][iso]).substring(0,1) + (p<3?idSfxMgta:idSfxNoir) + pngExt;				document.images[p+ 'i2'].src = pngChmMsg + idPfxMsg + String(idPays[tour1.gp[this.g][i]][iso]).substring(1,2) + (p<3?idSfxMgta:idSfxNoir) + pngExt;				document.images[p+ 'i3'].src = pngChmMsg + idPfxMsg + String(idPays[tour1.gp[this.g][i]][iso]).substring(2,3) + (p<3?idSfxMgta:idSfxNoir) + pngExt;				document.images[p+ 'sd'].src = pngChmMsg + idPfxMsg + Math.floor(this.pts[i]/10) + (p<3?idSfxMgta:idSfxNoir) + pngExt;				document.images[p+ 'su'].src = pngChmMsg + idPfxMsg + 			(this.pts[i]%10) + (p<3?idSfxMgta:idSfxNoir) + pngExt;				document.images[p+'mpd'].src = pngChmMsg + idPfxMsg + Math.floor(this.smp[i]/10) + (p<3?idSfxMgta:idSfxNoir) + pngExt;				document.images[p+'mpu'].src = pngChmMsg + idPfxMsg + 			(this.smp[i]%10) + (p<3?idSfxMgta:idSfxNoir) + pngExt;				document.images[p+'mcd'].src = pngChmMsg + idPfxMsg + Math.floor(this.smc[i]/10) + (p<3?idSfxMgta:idSfxNoir) + pngExt;				document.images[p+'mcu'].src = pngChmMsg + idPfxMsg + 			(this.smc[i]%10) + (p<3?idSfxMgta:idSfxNoir) + pngExt;				document.images[p+'dpd'].src = pngChmMsg + idPfxMsg + Math.floor(this.sdp[i]/10) + (p<3?idSfxMgta:idSfxNoir) + pngExt;				document.images[p+'dpu'].src = pngChmMsg + idPfxMsg + 			(this.sdp[i]%10) + (p<3?idSfxMgta:idSfxNoir) + pngExt;				document.images[p+'dcd'].src = pngChmMsg + idPfxMsg + Math.floor(this.sdc[i]/10) + (p<3?idSfxMgta:idSfxNoir) + pngExt;				document.images[p+'dcu'].src = pngChmMsg + idPfxMsg + 			(this.sdc[i]%10) + (p<3?idSfxMgta:idSfxNoir) + pngExt;			}}//---------------------------------------------------------------------------------------function clsTour1Calcule(){	// 0. On initialise	for(var i=0; i<5; i++) {		this.pts[i] = 0;		this.smp[i] = 0;		this.smc[i] = 0;		this.sdp[i] = 0;		this.sdc[i] = 0;		this.pos[i] = 1;	}	// 1. On cumule les points des matches	for(var j=0; j<10; j++)		for(var m=0; m<2; m++) {			if ((tour1.gm[this.g][j][m].sm[eqgauche]>tour1.gm[this.g][j][m].sm[eqdroite])||				((tour1.gm[this.g][j][m].sm[eqgauche]==tour1.gm[this.g][j][m].sm[eqdroite])&&				 (tour1.gm[this.g][j][m].sd[eqgauche]>tour1.gm[this.g][j][m].sd[eqdroite])))				this.pts[mt1[j][m][eqgauche]]++;			if ((tour1.gm[this.g][j][m].sm[eqgauche]<tour1.gm[this.g][j][m].sm[eqdroite])||				((tour1.gm[this.g][j][m].sm[eqgauche]==tour1.gm[this.g][j][m].sm[eqdroite])&&				 (tour1.gm[this.g][j][m].sd[eqgauche]<tour1.gm[this.g][j][m].sd[eqdroite])))				this.pts[mt1[j][m][eqdroite]]++;			for(var eq=0; eq<2; eq++) {				this.smp[mt1[j][m][eq]] += tour1.gm[this.g][j][m].sm[eq];				this.sdp[mt1[j][m][eq]] += tour1.gm[this.g][j][m].sd[eq];				this.smc[mt1[j][m][1-eq]] += tour1.gm[this.g][j][m].sm[eq];				this.sdc[mt1[j][m][1-eq]] += tour1.gm[this.g][j][m].sd[eq];			}		}	// 2. On calcule le classement	for(var i=0; i<5; i++) 		for(var ii=0; ii<5; ii++) 			if ((this.pts[i]<this.pts[ii])||				((this.pts[i]==this.pts[ii])&&(this.smp[i]-this.smc[i]<this.smp[ii]-this.smc[ii]))||				((this.pts[i]==this.pts[ii])&&(this.smp[i]-this.smc[i]==this.smp[ii]-this.smc[ii])&&(this.smp[i]<this.smp[ii]))||				((this.pts[i]==this.pts[ii])&&(this.smp[i]-this.smc[i]==this.smp[ii]-this.smc[ii])&&(this.smp[i]==this.smp[ii])&&(this.sdp[i]-this.sdc[i]<this.sdp[ii]-this.sdc[ii]))||				((this.pts[i]==this.pts[ii])&&(this.smp[i]-this.smc[i]==this.smp[ii]-this.smc[ii])&&(this.smp[i]==this.smp[ii])&&(this.sdp[i]-this.sdc[i]==this.sdp[ii]-this.sdc[ii])&&(this.smp[i]==this.smp[ii])&&(this.sdp[i]<this.sdp[ii]))||				((this.pts[i]==this.pts[ii])&&(this.smp[i]-this.smc[i]==this.smp[ii]-this.smc[ii])&&(this.smp[i]==this.smp[ii])&&(this.sdp[i]-this.sdc[i]==this.sdp[ii]-this.sdc[ii])&&(this.smp[i]==this.smp[ii])&&(this.sdp[i]==this.sdp[ii])&&(i>ii)))					this.pos[i]++;	// 3. Affichage du classement	this.affiche();}//---------------------------------------------------------------------------------------// TYPE TOURNOI TOUR 1//---------------------------------------------------------------------------------------function creeTypeTour1(){	// gp[groupe][equipe] = n°pays	this.gp = [	[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],				[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],				[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]];    // gm[groupe][journée][match], journée = 0~9, match = 0|1	this.gm =	[[[new creeTypeMtchGrp1(0,0,0),new creeTypeMtchGrp1(0,0,1)],[new creeTypeMtchGrp1(0,1,0),new creeTypeMtchGrp1(0,1,1)],[new creeTypeMtchGrp1(0,2,0),new creeTypeMtchGrp1(0,2,1)],[new creeTypeMtchGrp1(0,3,0),new creeTypeMtchGrp1(0,3,1)],[new creeTypeMtchGrp1(0,4,0),new creeTypeMtchGrp1(0,4,1)],[new creeTypeMtchGrp1(0,5,0),new creeTypeMtchGrp1(0,5,1)],[new creeTypeMtchGrp1(0,6,0),new creeTypeMtchGrp1(0,6,1)],[new creeTypeMtchGrp1(0,7,0),new creeTypeMtchGrp1(0,7,1)],[new creeTypeMtchGrp1(0,8,0),new creeTypeMtchGrp1(0,8,1)],[new creeTypeMtchGrp1(0,9,0),new creeTypeMtchGrp1(0,9,1)]],				 [[new creeTypeMtchGrp1(1,0,0),new creeTypeMtchGrp1(1,0,1)],[new creeTypeMtchGrp1(1,1,0),new creeTypeMtchGrp1(1,1,1)],[new creeTypeMtchGrp1(1,2,0),new creeTypeMtchGrp1(1,2,1)],[new creeTypeMtchGrp1(1,3,0),new creeTypeMtchGrp1(1,3,1)],[new creeTypeMtchGrp1(1,4,0),new creeTypeMtchGrp1(1,4,1)],[new creeTypeMtchGrp1(1,5,0),new creeTypeMtchGrp1(1,5,1)],[new creeTypeMtchGrp1(1,6,0),new creeTypeMtchGrp1(1,6,1)],[new creeTypeMtchGrp1(1,7,0),new creeTypeMtchGrp1(1,7,1)],[new creeTypeMtchGrp1(1,8,0),new creeTypeMtchGrp1(1,8,1)],[new creeTypeMtchGrp1(1,9,0),new creeTypeMtchGrp1(1,9,1)]],				 [[new creeTypeMtchGrp1(2,0,0),new creeTypeMtchGrp1(2,0,1)],[new creeTypeMtchGrp1(2,1,0),new creeTypeMtchGrp1(2,1,1)],[new creeTypeMtchGrp1(2,2,0),new creeTypeMtchGrp1(2,2,1)],[new creeTypeMtchGrp1(2,3,0),new creeTypeMtchGrp1(2,3,1)],[new creeTypeMtchGrp1(2,4,0),new creeTypeMtchGrp1(2,4,1)],[new creeTypeMtchGrp1(2,5,0),new creeTypeMtchGrp1(2,5,1)],[new creeTypeMtchGrp1(2,6,0),new creeTypeMtchGrp1(2,6,1)],[new creeTypeMtchGrp1(2,7,0),new creeTypeMtchGrp1(2,7,1)],[new creeTypeMtchGrp1(2,8,0),new creeTypeMtchGrp1(2,8,1)],[new creeTypeMtchGrp1(2,9,0),new creeTypeMtchGrp1(2,9,1)]],				 [[new creeTypeMtchGrp1(3,0,0),new creeTypeMtchGrp1(3,0,1)],[new creeTypeMtchGrp1(3,1,0),new creeTypeMtchGrp1(3,1,1)],[new creeTypeMtchGrp1(3,2,0),new creeTypeMtchGrp1(3,2,1)],[new creeTypeMtchGrp1(3,3,0),new creeTypeMtchGrp1(3,3,1)],[new creeTypeMtchGrp1(3,4,0),new creeTypeMtchGrp1(3,4,1)],[new creeTypeMtchGrp1(3,5,0),new creeTypeMtchGrp1(3,5,1)],[new creeTypeMtchGrp1(3,6,0),new creeTypeMtchGrp1(3,6,1)],[new creeTypeMtchGrp1(3,7,0),new creeTypeMtchGrp1(3,7,1)],[new creeTypeMtchGrp1(3,8,0),new creeTypeMtchGrp1(3,8,1)],[new creeTypeMtchGrp1(3,9,0),new creeTypeMtchGrp1(3,9,1)]],				 [[new creeTypeMtchGrp1(4,0,0),new creeTypeMtchGrp1(4,0,1)],[new creeTypeMtchGrp1(4,1,0),new creeTypeMtchGrp1(4,1,1)],[new creeTypeMtchGrp1(4,2,0),new creeTypeMtchGrp1(4,2,1)],[new creeTypeMtchGrp1(4,3,0),new creeTypeMtchGrp1(4,3,1)],[new creeTypeMtchGrp1(4,4,0),new creeTypeMtchGrp1(4,4,1)],[new creeTypeMtchGrp1(4,5,0),new creeTypeMtchGrp1(4,5,1)],[new creeTypeMtchGrp1(4,6,0),new creeTypeMtchGrp1(4,6,1)],[new creeTypeMtchGrp1(4,7,0),new creeTypeMtchGrp1(4,7,1)],[new creeTypeMtchGrp1(4,8,0),new creeTypeMtchGrp1(4,8,1)],[new creeTypeMtchGrp1(4,9,0),new creeTypeMtchGrp1(4,9,1)]],				 [[new creeTypeMtchGrp1(5,0,0),new creeTypeMtchGrp1(5,0,1)],[new creeTypeMtchGrp1(5,1,0),new creeTypeMtchGrp1(5,1,1)],[new creeTypeMtchGrp1(5,2,0),new creeTypeMtchGrp1(5,2,1)],[new creeTypeMtchGrp1(5,3,0),new creeTypeMtchGrp1(5,3,1)],[new creeTypeMtchGrp1(5,4,0),new creeTypeMtchGrp1(5,4,1)],[new creeTypeMtchGrp1(5,5,0),new creeTypeMtchGrp1(5,5,1)],[new creeTypeMtchGrp1(5,6,0),new creeTypeMtchGrp1(5,6,1)],[new creeTypeMtchGrp1(5,7,0),new creeTypeMtchGrp1(5,7,1)],[new creeTypeMtchGrp1(5,8,0),new creeTypeMtchGrp1(5,8,1)],[new creeTypeMtchGrp1(5,9,0),new creeTypeMtchGrp1(5,9,1)]],				 [[new creeTypeMtchGrp1(6,0,0),new creeTypeMtchGrp1(6,0,1)],[new creeTypeMtchGrp1(6,1,0),new creeTypeMtchGrp1(6,1,1)],[new creeTypeMtchGrp1(6,2,0),new creeTypeMtchGrp1(6,2,1)],[new creeTypeMtchGrp1(6,3,0),new creeTypeMtchGrp1(6,3,1)],[new creeTypeMtchGrp1(6,4,0),new creeTypeMtchGrp1(6,4,1)],[new creeTypeMtchGrp1(6,5,0),new creeTypeMtchGrp1(6,5,1)],[new creeTypeMtchGrp1(6,6,0),new creeTypeMtchGrp1(6,6,1)],[new creeTypeMtchGrp1(6,7,0),new creeTypeMtchGrp1(6,7,1)],[new creeTypeMtchGrp1(6,8,0),new creeTypeMtchGrp1(6,8,1)],[new creeTypeMtchGrp1(6,9,0),new creeTypeMtchGrp1(6,9,1)]],				 [[new creeTypeMtchGrp1(7,0,0),new creeTypeMtchGrp1(7,0,1)],[new creeTypeMtchGrp1(7,1,0),new creeTypeMtchGrp1(7,1,1)],[new creeTypeMtchGrp1(7,2,0),new creeTypeMtchGrp1(7,2,1)],[new creeTypeMtchGrp1(7,3,0),new creeTypeMtchGrp1(7,3,1)],[new creeTypeMtchGrp1(7,4,0),new creeTypeMtchGrp1(7,4,1)],[new creeTypeMtchGrp1(7,5,0),new creeTypeMtchGrp1(7,5,1)],[new creeTypeMtchGrp1(7,6,0),new creeTypeMtchGrp1(7,6,1)],[new creeTypeMtchGrp1(7,7,0),new creeTypeMtchGrp1(7,7,1)],[new creeTypeMtchGrp1(7,8,0),new creeTypeMtchGrp1(7,8,1)],[new creeTypeMtchGrp1(7,9,0),new creeTypeMtchGrp1(7,9,1)]],				 [[new creeTypeMtchGrp1(8,0,0),new creeTypeMtchGrp1(8,0,1)],[new creeTypeMtchGrp1(8,1,0),new creeTypeMtchGrp1(8,1,1)],[new creeTypeMtchGrp1(8,2,0),new creeTypeMtchGrp1(8,2,1)],[new creeTypeMtchGrp1(8,3,0),new creeTypeMtchGrp1(8,3,1)],[new creeTypeMtchGrp1(8,4,0),new creeTypeMtchGrp1(8,4,1)],[new creeTypeMtchGrp1(8,5,0),new creeTypeMtchGrp1(8,5,1)],[new creeTypeMtchGrp1(8,6,0),new creeTypeMtchGrp1(8,6,1)],[new creeTypeMtchGrp1(8,7,0),new creeTypeMtchGrp1(8,7,1)],[new creeTypeMtchGrp1(8,8,0),new creeTypeMtchGrp1(8,8,1)],[new creeTypeMtchGrp1(8,9,0),new creeTypeMtchGrp1(8,9,1)]],				 [[new creeTypeMtchGrp1(9,0,0),new creeTypeMtchGrp1(9,0,1)],[new creeTypeMtchGrp1(9,1,0),new creeTypeMtchGrp1(9,1,1)],[new creeTypeMtchGrp1(9,2,0),new creeTypeMtchGrp1(9,2,1)],[new creeTypeMtchGrp1(9,3,0),new creeTypeMtchGrp1(9,3,1)],[new creeTypeMtchGrp1(9,4,0),new creeTypeMtchGrp1(9,4,1)],[new creeTypeMtchGrp1(9,5,0),new creeTypeMtchGrp1(9,5,1)],[new creeTypeMtchGrp1(9,6,0),new creeTypeMtchGrp1(9,6,1)],[new creeTypeMtchGrp1(9,7,0),new creeTypeMtchGrp1(9,7,1)],[new creeTypeMtchGrp1(9,8,0),new creeTypeMtchGrp1(9,8,1)],[new creeTypeMtchGrp1(9,9,0),new creeTypeMtchGrp1(9,9,1)]],				 [[new creeTypeMtchGrp1(10,0,0),new creeTypeMtchGrp1(10,0,1)],[new creeTypeMtchGrp1(10,1,0),new creeTypeMtchGrp1(10,1,1)],[new creeTypeMtchGrp1(10,2,0),new creeTypeMtchGrp1(10,2,1)],[new creeTypeMtchGrp1(10,3,0),new creeTypeMtchGrp1(10,3,1)],[new creeTypeMtchGrp1(10,4,0),new creeTypeMtchGrp1(10,4,1)],[new creeTypeMtchGrp1(10,5,0),new creeTypeMtchGrp1(10,5,1)],[new creeTypeMtchGrp1(10,6,0),new creeTypeMtchGrp1(10,6,1)],[new creeTypeMtchGrp1(10,7,0),new creeTypeMtchGrp1(10,7,1)],[new creeTypeMtchGrp1(10,8,0),new creeTypeMtchGrp1(10,8,1)],[new creeTypeMtchGrp1(10,9,0),new creeTypeMtchGrp1(10,9,1)]],				 [[new creeTypeMtchGrp1(11,0,0),new creeTypeMtchGrp1(11,0,1)],[new creeTypeMtchGrp1(11,1,0),new creeTypeMtchGrp1(11,1,1)],[new creeTypeMtchGrp1(11,2,0),new creeTypeMtchGrp1(11,2,1)],[new creeTypeMtchGrp1(11,3,0),new creeTypeMtchGrp1(11,3,1)],[new creeTypeMtchGrp1(11,4,0),new creeTypeMtchGrp1(11,4,1)],[new creeTypeMtchGrp1(11,5,0),new creeTypeMtchGrp1(11,5,1)],[new creeTypeMtchGrp1(11,6,0),new creeTypeMtchGrp1(11,6,1)],[new creeTypeMtchGrp1(11,7,0),new creeTypeMtchGrp1(11,7,1)],[new creeTypeMtchGrp1(11,8,0),new creeTypeMtchGrp1(11,8,1)],[new creeTypeMtchGrp1(11,9,0),new creeTypeMtchGrp1(11,9,1)]],				 [[new creeTypeMtchGrp1(12,0,0),new creeTypeMtchGrp1(12,0,1)],[new creeTypeMtchGrp1(12,1,0),new creeTypeMtchGrp1(12,1,1)],[new creeTypeMtchGrp1(12,2,0),new creeTypeMtchGrp1(12,2,1)],[new creeTypeMtchGrp1(12,3,0),new creeTypeMtchGrp1(12,3,1)],[new creeTypeMtchGrp1(12,4,0),new creeTypeMtchGrp1(12,4,1)],[new creeTypeMtchGrp1(12,5,0),new creeTypeMtchGrp1(12,5,1)],[new creeTypeMtchGrp1(12,6,0),new creeTypeMtchGrp1(12,6,1)],[new creeTypeMtchGrp1(12,7,0),new creeTypeMtchGrp1(12,7,1)],[new creeTypeMtchGrp1(12,8,0),new creeTypeMtchGrp1(12,8,1)],[new creeTypeMtchGrp1(12,9,0),new creeTypeMtchGrp1(12,9,1)]],				 [[new creeTypeMtchGrp1(13,0,0),new creeTypeMtchGrp1(13,0,1)],[new creeTypeMtchGrp1(13,1,0),new creeTypeMtchGrp1(13,1,1)],[new creeTypeMtchGrp1(13,2,0),new creeTypeMtchGrp1(13,2,1)],[new creeTypeMtchGrp1(13,3,0),new creeTypeMtchGrp1(13,3,1)],[new creeTypeMtchGrp1(13,4,0),new creeTypeMtchGrp1(13,4,1)],[new creeTypeMtchGrp1(13,5,0),new creeTypeMtchGrp1(13,5,1)],[new creeTypeMtchGrp1(13,6,0),new creeTypeMtchGrp1(13,6,1)],[new creeTypeMtchGrp1(13,7,0),new creeTypeMtchGrp1(13,7,1)],[new creeTypeMtchGrp1(13,8,0),new creeTypeMtchGrp1(13,8,1)],[new creeTypeMtchGrp1(13,9,0),new creeTypeMtchGrp1(13,9,1)]],				 [[new creeTypeMtchGrp1(14,0,0),new creeTypeMtchGrp1(14,0,1)],[new creeTypeMtchGrp1(14,1,0),new creeTypeMtchGrp1(14,1,1)],[new creeTypeMtchGrp1(14,2,0),new creeTypeMtchGrp1(14,2,1)],[new creeTypeMtchGrp1(14,3,0),new creeTypeMtchGrp1(14,3,1)],[new creeTypeMtchGrp1(14,4,0),new creeTypeMtchGrp1(14,4,1)],[new creeTypeMtchGrp1(14,5,0),new creeTypeMtchGrp1(14,5,1)],[new creeTypeMtchGrp1(14,6,0),new creeTypeMtchGrp1(14,6,1)],[new creeTypeMtchGrp1(14,7,0),new creeTypeMtchGrp1(14,7,1)],[new creeTypeMtchGrp1(14,8,0),new creeTypeMtchGrp1(14,8,1)],[new creeTypeMtchGrp1(14,9,0),new creeTypeMtchGrp1(14,9,1)]],				 [[new creeTypeMtchGrp1(15,0,0),new creeTypeMtchGrp1(15,0,1)],[new creeTypeMtchGrp1(15,1,0),new creeTypeMtchGrp1(15,1,1)],[new creeTypeMtchGrp1(15,2,0),new creeTypeMtchGrp1(15,2,1)],[new creeTypeMtchGrp1(15,3,0),new creeTypeMtchGrp1(15,3,1)],[new creeTypeMtchGrp1(15,4,0),new creeTypeMtchGrp1(15,4,1)],[new creeTypeMtchGrp1(15,5,0),new creeTypeMtchGrp1(15,5,1)],[new creeTypeMtchGrp1(15,6,0),new creeTypeMtchGrp1(15,6,1)],[new creeTypeMtchGrp1(15,7,0),new creeTypeMtchGrp1(15,7,1)],[new creeTypeMtchGrp1(15,8,0),new creeTypeMtchGrp1(15,8,1)],[new creeTypeMtchGrp1(15,9,0),new creeTypeMtchGrp1(15,9,1)]],				 [[new creeTypeMtchGrp1(16,0,0),new creeTypeMtchGrp1(16,0,1)],[new creeTypeMtchGrp1(16,1,0),new creeTypeMtchGrp1(16,1,1)],[new creeTypeMtchGrp1(16,2,0),new creeTypeMtchGrp1(16,2,1)],[new creeTypeMtchGrp1(16,3,0),new creeTypeMtchGrp1(16,3,1)],[new creeTypeMtchGrp1(16,4,0),new creeTypeMtchGrp1(16,4,1)],[new creeTypeMtchGrp1(16,5,0),new creeTypeMtchGrp1(16,5,1)],[new creeTypeMtchGrp1(16,6,0),new creeTypeMtchGrp1(16,6,1)],[new creeTypeMtchGrp1(16,7,0),new creeTypeMtchGrp1(16,7,1)],[new creeTypeMtchGrp1(16,8,0),new creeTypeMtchGrp1(16,8,1)],[new creeTypeMtchGrp1(16,9,0),new creeTypeMtchGrp1(16,9,1)]],				 [[new creeTypeMtchGrp1(17,0,0),new creeTypeMtchGrp1(17,0,1)],[new creeTypeMtchGrp1(17,1,0),new creeTypeMtchGrp1(17,1,1)],[new creeTypeMtchGrp1(17,2,0),new creeTypeMtchGrp1(17,2,1)],[new creeTypeMtchGrp1(17,3,0),new creeTypeMtchGrp1(17,3,1)],[new creeTypeMtchGrp1(17,4,0),new creeTypeMtchGrp1(17,4,1)],[new creeTypeMtchGrp1(17,5,0),new creeTypeMtchGrp1(17,5,1)],[new creeTypeMtchGrp1(17,6,0),new creeTypeMtchGrp1(17,6,1)],[new creeTypeMtchGrp1(17,7,0),new creeTypeMtchGrp1(17,7,1)],[new creeTypeMtchGrp1(17,8,0),new creeTypeMtchGrp1(17,8,1)],[new creeTypeMtchGrp1(17,9,0),new creeTypeMtchGrp1(17,9,1)]],				 [[new creeTypeMtchGrp1(18,0,0),new creeTypeMtchGrp1(18,0,1)],[new creeTypeMtchGrp1(18,1,0),new creeTypeMtchGrp1(18,1,1)],[new creeTypeMtchGrp1(18,2,0),new creeTypeMtchGrp1(18,2,1)],[new creeTypeMtchGrp1(18,3,0),new creeTypeMtchGrp1(18,3,1)],[new creeTypeMtchGrp1(18,4,0),new creeTypeMtchGrp1(18,4,1)],[new creeTypeMtchGrp1(18,5,0),new creeTypeMtchGrp1(18,5,1)],[new creeTypeMtchGrp1(18,6,0),new creeTypeMtchGrp1(18,6,1)],[new creeTypeMtchGrp1(18,7,0),new creeTypeMtchGrp1(18,7,1)],[new creeTypeMtchGrp1(18,8,0),new creeTypeMtchGrp1(18,8,1)],[new creeTypeMtchGrp1(18,9,0),new creeTypeMtchGrp1(18,9,1)]],				 [[new creeTypeMtchGrp1(19,0,0),new creeTypeMtchGrp1(19,0,1)],[new creeTypeMtchGrp1(19,1,0),new creeTypeMtchGrp1(19,1,1)],[new creeTypeMtchGrp1(19,2,0),new creeTypeMtchGrp1(19,2,1)],[new creeTypeMtchGrp1(19,3,0),new creeTypeMtchGrp1(19,3,1)],[new creeTypeMtchGrp1(19,4,0),new creeTypeMtchGrp1(19,4,1)],[new creeTypeMtchGrp1(19,5,0),new creeTypeMtchGrp1(19,5,1)],[new creeTypeMtchGrp1(19,6,0),new creeTypeMtchGrp1(19,6,1)],[new creeTypeMtchGrp1(19,7,0),new creeTypeMtchGrp1(19,7,1)],[new creeTypeMtchGrp1(19,8,0),new creeTypeMtchGrp1(19,8,1)],[new creeTypeMtchGrp1(19,9,0),new creeTypeMtchGrp1(19,9,1)]],				 [[new creeTypeMtchGrp1(20,0,0),new creeTypeMtchGrp1(20,0,1)],[new creeTypeMtchGrp1(20,1,0),new creeTypeMtchGrp1(20,1,1)],[new creeTypeMtchGrp1(20,2,0),new creeTypeMtchGrp1(20,2,1)],[new creeTypeMtchGrp1(20,3,0),new creeTypeMtchGrp1(20,3,1)],[new creeTypeMtchGrp1(20,4,0),new creeTypeMtchGrp1(20,4,1)],[new creeTypeMtchGrp1(20,5,0),new creeTypeMtchGrp1(20,5,1)],[new creeTypeMtchGrp1(20,6,0),new creeTypeMtchGrp1(20,6,1)],[new creeTypeMtchGrp1(20,7,0),new creeTypeMtchGrp1(20,7,1)],[new creeTypeMtchGrp1(20,8,0),new creeTypeMtchGrp1(20,8,1)],[new creeTypeMtchGrp1(20,9,0),new creeTypeMtchGrp1(20,9,1)]],				 [[new creeTypeMtchGrp1(21,0,0),new creeTypeMtchGrp1(21,0,1)],[new creeTypeMtchGrp1(21,1,0),new creeTypeMtchGrp1(21,1,1)],[new creeTypeMtchGrp1(21,2,0),new creeTypeMtchGrp1(21,2,1)],[new creeTypeMtchGrp1(21,3,0),new creeTypeMtchGrp1(21,3,1)],[new creeTypeMtchGrp1(21,4,0),new creeTypeMtchGrp1(21,4,1)],[new creeTypeMtchGrp1(21,5,0),new creeTypeMtchGrp1(21,5,1)],[new creeTypeMtchGrp1(21,6,0),new creeTypeMtchGrp1(21,6,1)],[new creeTypeMtchGrp1(21,7,0),new creeTypeMtchGrp1(21,7,1)],[new creeTypeMtchGrp1(21,8,0),new creeTypeMtchGrp1(21,8,1)],[new creeTypeMtchGrp1(21,9,0),new creeTypeMtchGrp1(21,9,1)]],				 [[new creeTypeMtchGrp1(22,0,0),new creeTypeMtchGrp1(22,0,1)],[new creeTypeMtchGrp1(22,1,0),new creeTypeMtchGrp1(22,1,1)],[new creeTypeMtchGrp1(22,2,0),new creeTypeMtchGrp1(22,2,1)],[new creeTypeMtchGrp1(22,3,0),new creeTypeMtchGrp1(22,3,1)],[new creeTypeMtchGrp1(22,4,0),new creeTypeMtchGrp1(22,4,1)],[new creeTypeMtchGrp1(22,5,0),new creeTypeMtchGrp1(22,5,1)],[new creeTypeMtchGrp1(22,6,0),new creeTypeMtchGrp1(22,6,1)],[new creeTypeMtchGrp1(22,7,0),new creeTypeMtchGrp1(22,7,1)],[new creeTypeMtchGrp1(22,8,0),new creeTypeMtchGrp1(22,8,1)],[new creeTypeMtchGrp1(22,9,0),new creeTypeMtchGrp1(22,9,1)]],				 [[new creeTypeMtchGrp1(23,0,0),new creeTypeMtchGrp1(23,0,1)],[new creeTypeMtchGrp1(23,1,0),new creeTypeMtchGrp1(23,1,1)],[new creeTypeMtchGrp1(23,2,0),new creeTypeMtchGrp1(23,2,1)],[new creeTypeMtchGrp1(23,3,0),new creeTypeMtchGrp1(23,3,1)],[new creeTypeMtchGrp1(23,4,0),new creeTypeMtchGrp1(23,4,1)],[new creeTypeMtchGrp1(23,5,0),new creeTypeMtchGrp1(23,5,1)],[new creeTypeMtchGrp1(23,6,0),new creeTypeMtchGrp1(23,6,1)],[new creeTypeMtchGrp1(23,7,0),new creeTypeMtchGrp1(23,7,1)],[new creeTypeMtchGrp1(23,8,0),new creeTypeMtchGrp1(23,8,1)],[new creeTypeMtchGrp1(23,9,0),new creeTypeMtchGrp1(23,9,1)]],				 [[new creeTypeMtchGrp1(24,0,0),new creeTypeMtchGrp1(24,0,1)],[new creeTypeMtchGrp1(24,1,0),new creeTypeMtchGrp1(24,1,1)],[new creeTypeMtchGrp1(24,2,0),new creeTypeMtchGrp1(24,2,1)],[new creeTypeMtchGrp1(24,3,0),new creeTypeMtchGrp1(24,3,1)],[new creeTypeMtchGrp1(24,4,0),new creeTypeMtchGrp1(24,4,1)],[new creeTypeMtchGrp1(24,5,0),new creeTypeMtchGrp1(24,5,1)],[new creeTypeMtchGrp1(24,6,0),new creeTypeMtchGrp1(24,6,1)],[new creeTypeMtchGrp1(24,7,0),new creeTypeMtchGrp1(24,7,1)],[new creeTypeMtchGrp1(24,8,0),new creeTypeMtchGrp1(24,8,1)],[new creeTypeMtchGrp1(24,9,0),new creeTypeMtchGrp1(24,9,1)]],				 [[new creeTypeMtchGrp1(25,0,0),new creeTypeMtchGrp1(25,0,1)],[new creeTypeMtchGrp1(25,1,0),new creeTypeMtchGrp1(25,1,1)],[new creeTypeMtchGrp1(25,2,0),new creeTypeMtchGrp1(25,2,1)],[new creeTypeMtchGrp1(25,3,0),new creeTypeMtchGrp1(25,3,1)],[new creeTypeMtchGrp1(25,4,0),new creeTypeMtchGrp1(25,4,1)],[new creeTypeMtchGrp1(25,5,0),new creeTypeMtchGrp1(25,5,1)],[new creeTypeMtchGrp1(25,6,0),new creeTypeMtchGrp1(25,6,1)],[new creeTypeMtchGrp1(25,7,0),new creeTypeMtchGrp1(25,7,1)],[new creeTypeMtchGrp1(25,8,0),new creeTypeMtchGrp1(25,8,1)],[new creeTypeMtchGrp1(25,9,0),new creeTypeMtchGrp1(25,9,1)]],				 [[new creeTypeMtchGrp1(26,0,0),new creeTypeMtchGrp1(26,0,1)],[new creeTypeMtchGrp1(26,1,0),new creeTypeMtchGrp1(26,1,1)],[new creeTypeMtchGrp1(26,2,0),new creeTypeMtchGrp1(26,2,1)],[new creeTypeMtchGrp1(26,3,0),new creeTypeMtchGrp1(26,3,1)],[new creeTypeMtchGrp1(26,4,0),new creeTypeMtchGrp1(26,4,1)],[new creeTypeMtchGrp1(26,5,0),new creeTypeMtchGrp1(26,5,1)],[new creeTypeMtchGrp1(26,6,0),new creeTypeMtchGrp1(26,6,1)],[new creeTypeMtchGrp1(26,7,0),new creeTypeMtchGrp1(26,7,1)],[new creeTypeMtchGrp1(26,8,0),new creeTypeMtchGrp1(26,8,1)],[new creeTypeMtchGrp1(26,9,0),new creeTypeMtchGrp1(26,9,1)]],				 [[new creeTypeMtchGrp1(27,0,0),new creeTypeMtchGrp1(27,0,1)],[new creeTypeMtchGrp1(27,1,0),new creeTypeMtchGrp1(27,1,1)],[new creeTypeMtchGrp1(27,2,0),new creeTypeMtchGrp1(27,2,1)],[new creeTypeMtchGrp1(27,3,0),new creeTypeMtchGrp1(27,3,1)],[new creeTypeMtchGrp1(27,4,0),new creeTypeMtchGrp1(27,4,1)],[new creeTypeMtchGrp1(27,5,0),new creeTypeMtchGrp1(27,5,1)],[new creeTypeMtchGrp1(27,6,0),new creeTypeMtchGrp1(27,6,1)],[new creeTypeMtchGrp1(27,7,0),new creeTypeMtchGrp1(27,7,1)],[new creeTypeMtchGrp1(27,8,0),new creeTypeMtchGrp1(27,8,1)],[new creeTypeMtchGrp1(27,9,0),new creeTypeMtchGrp1(27,9,1)]],				 [[new creeTypeMtchGrp1(28,0,0),new creeTypeMtchGrp1(28,0,1)],[new creeTypeMtchGrp1(28,1,0),new creeTypeMtchGrp1(28,1,1)],[new creeTypeMtchGrp1(28,2,0),new creeTypeMtchGrp1(28,2,1)],[new creeTypeMtchGrp1(28,3,0),new creeTypeMtchGrp1(28,3,1)],[new creeTypeMtchGrp1(28,4,0),new creeTypeMtchGrp1(28,4,1)],[new creeTypeMtchGrp1(28,5,0),new creeTypeMtchGrp1(28,5,1)],[new creeTypeMtchGrp1(28,6,0),new creeTypeMtchGrp1(28,6,1)],[new creeTypeMtchGrp1(28,7,0),new creeTypeMtchGrp1(28,7,1)],[new creeTypeMtchGrp1(28,8,0),new creeTypeMtchGrp1(28,8,1)],[new creeTypeMtchGrp1(28,9,0),new creeTypeMtchGrp1(28,9,1)]],				 [[new creeTypeMtchGrp1(29,0,0),new creeTypeMtchGrp1(29,0,1)],[new creeTypeMtchGrp1(29,1,0),new creeTypeMtchGrp1(29,1,1)],[new creeTypeMtchGrp1(29,2,0),new creeTypeMtchGrp1(29,2,1)],[new creeTypeMtchGrp1(29,3,0),new creeTypeMtchGrp1(29,3,1)],[new creeTypeMtchGrp1(29,4,0),new creeTypeMtchGrp1(29,4,1)],[new creeTypeMtchGrp1(29,5,0),new creeTypeMtchGrp1(29,5,1)],[new creeTypeMtchGrp1(29,6,0),new creeTypeMtchGrp1(29,6,1)],[new creeTypeMtchGrp1(29,7,0),new creeTypeMtchGrp1(29,7,1)],[new creeTypeMtchGrp1(29,8,0),new creeTypeMtchGrp1(29,8,1)],[new creeTypeMtchGrp1(29,9,0),new creeTypeMtchGrp1(29,9,1)]],				 [[new creeTypeMtchGrp1(30,0,0),new creeTypeMtchGrp1(30,0,1)],[new creeTypeMtchGrp1(30,1,0),new creeTypeMtchGrp1(30,1,1)],[new creeTypeMtchGrp1(30,2,0),new creeTypeMtchGrp1(30,2,1)],[new creeTypeMtchGrp1(30,3,0),new creeTypeMtchGrp1(30,3,1)],[new creeTypeMtchGrp1(30,4,0),new creeTypeMtchGrp1(30,4,1)],[new creeTypeMtchGrp1(30,5,0),new creeTypeMtchGrp1(30,5,1)],[new creeTypeMtchGrp1(30,6,0),new creeTypeMtchGrp1(30,6,1)],[new creeTypeMtchGrp1(30,7,0),new creeTypeMtchGrp1(30,7,1)],[new creeTypeMtchGrp1(30,8,0),new creeTypeMtchGrp1(30,8,1)],[new creeTypeMtchGrp1(30,9,0),new creeTypeMtchGrp1(30,9,1)]],				 [[new creeTypeMtchGrp1(31,0,0),new creeTypeMtchGrp1(31,0,1)],[new creeTypeMtchGrp1(31,1,0),new creeTypeMtchGrp1(31,1,1)],[new creeTypeMtchGrp1(31,2,0),new creeTypeMtchGrp1(31,2,1)],[new creeTypeMtchGrp1(31,3,0),new creeTypeMtchGrp1(31,3,1)],[new creeTypeMtchGrp1(31,4,0),new creeTypeMtchGrp1(31,4,1)],[new creeTypeMtchGrp1(31,5,0),new creeTypeMtchGrp1(31,5,1)],[new creeTypeMtchGrp1(31,6,0),new creeTypeMtchGrp1(31,6,1)],[new creeTypeMtchGrp1(31,7,0),new creeTypeMtchGrp1(31,7,1)],[new creeTypeMtchGrp1(31,8,0),new creeTypeMtchGrp1(31,8,1)],[new creeTypeMtchGrp1(31,9,0),new creeTypeMtchGrp1(31,9,1)]],				 [[new creeTypeMtchGrp1(32,0,0),new creeTypeMtchGrp1(32,0,1)],[new creeTypeMtchGrp1(32,1,0),new creeTypeMtchGrp1(32,1,1)],[new creeTypeMtchGrp1(32,2,0),new creeTypeMtchGrp1(32,2,1)],[new creeTypeMtchGrp1(32,3,0),new creeTypeMtchGrp1(32,3,1)],[new creeTypeMtchGrp1(32,4,0),new creeTypeMtchGrp1(32,4,1)],[new creeTypeMtchGrp1(32,5,0),new creeTypeMtchGrp1(32,5,1)],[new creeTypeMtchGrp1(32,6,0),new creeTypeMtchGrp1(32,6,1)],[new creeTypeMtchGrp1(32,7,0),new creeTypeMtchGrp1(32,7,1)],[new creeTypeMtchGrp1(32,8,0),new creeTypeMtchGrp1(32,8,1)],[new creeTypeMtchGrp1(32,9,0),new creeTypeMtchGrp1(32,9,1)]],				 [[new creeTypeMtchGrp1(33,0,0),new creeTypeMtchGrp1(33,0,1)],[new creeTypeMtchGrp1(33,1,0),new creeTypeMtchGrp1(33,1,1)],[new creeTypeMtchGrp1(33,2,0),new creeTypeMtchGrp1(33,2,1)],[new creeTypeMtchGrp1(33,3,0),new creeTypeMtchGrp1(33,3,1)],[new creeTypeMtchGrp1(33,4,0),new creeTypeMtchGrp1(33,4,1)],[new creeTypeMtchGrp1(33,5,0),new creeTypeMtchGrp1(33,5,1)],[new creeTypeMtchGrp1(33,6,0),new creeTypeMtchGrp1(33,6,1)],[new creeTypeMtchGrp1(33,7,0),new creeTypeMtchGrp1(33,7,1)],[new creeTypeMtchGrp1(33,8,0),new creeTypeMtchGrp1(33,8,1)],[new creeTypeMtchGrp1(33,9,0),new creeTypeMtchGrp1(33,9,1)]],				 [[new creeTypeMtchGrp1(34,0,0),new creeTypeMtchGrp1(34,0,1)],[new creeTypeMtchGrp1(34,1,0),new creeTypeMtchGrp1(34,1,1)],[new creeTypeMtchGrp1(34,2,0),new creeTypeMtchGrp1(34,2,1)],[new creeTypeMtchGrp1(34,3,0),new creeTypeMtchGrp1(34,3,1)],[new creeTypeMtchGrp1(34,4,0),new creeTypeMtchGrp1(34,4,1)],[new creeTypeMtchGrp1(34,5,0),new creeTypeMtchGrp1(34,5,1)],[new creeTypeMtchGrp1(34,6,0),new creeTypeMtchGrp1(34,6,1)],[new creeTypeMtchGrp1(34,7,0),new creeTypeMtchGrp1(34,7,1)],[new creeTypeMtchGrp1(34,8,0),new creeTypeMtchGrp1(34,8,1)],[new creeTypeMtchGrp1(34,9,0),new creeTypeMtchGrp1(34,9,1)]],				 [[new creeTypeMtchGrp1(35,0,0),new creeTypeMtchGrp1(35,0,1)],[new creeTypeMtchGrp1(35,1,0),new creeTypeMtchGrp1(35,1,1)],[new creeTypeMtchGrp1(35,2,0),new creeTypeMtchGrp1(35,2,1)],[new creeTypeMtchGrp1(35,3,0),new creeTypeMtchGrp1(35,3,1)],[new creeTypeMtchGrp1(35,4,0),new creeTypeMtchGrp1(35,4,1)],[new creeTypeMtchGrp1(35,5,0),new creeTypeMtchGrp1(35,5,1)],[new creeTypeMtchGrp1(35,6,0),new creeTypeMtchGrp1(35,6,1)],[new creeTypeMtchGrp1(35,7,0),new creeTypeMtchGrp1(35,7,1)],[new creeTypeMtchGrp1(35,8,0),new creeTypeMtchGrp1(35,8,1)],[new creeTypeMtchGrp1(35,9,0),new creeTypeMtchGrp1(35,9,1)]],				 [[new creeTypeMtchGrp1(36,0,0),new creeTypeMtchGrp1(36,0,1)],[new creeTypeMtchGrp1(36,1,0),new creeTypeMtchGrp1(36,1,1)],[new creeTypeMtchGrp1(36,2,0),new creeTypeMtchGrp1(36,2,1)],[new creeTypeMtchGrp1(36,3,0),new creeTypeMtchGrp1(36,3,1)],[new creeTypeMtchGrp1(36,4,0),new creeTypeMtchGrp1(36,4,1)],[new creeTypeMtchGrp1(36,5,0),new creeTypeMtchGrp1(36,5,1)],[new creeTypeMtchGrp1(36,6,0),new creeTypeMtchGrp1(36,6,1)],[new creeTypeMtchGrp1(36,7,0),new creeTypeMtchGrp1(36,7,1)],[new creeTypeMtchGrp1(36,8,0),new creeTypeMtchGrp1(36,8,1)],[new creeTypeMtchGrp1(36,9,0),new creeTypeMtchGrp1(36,9,1)]],				 [[new creeTypeMtchGrp1(37,0,0),new creeTypeMtchGrp1(37,0,1)],[new creeTypeMtchGrp1(37,1,0),new creeTypeMtchGrp1(37,1,1)],[new creeTypeMtchGrp1(37,2,0),new creeTypeMtchGrp1(37,2,1)],[new creeTypeMtchGrp1(37,3,0),new creeTypeMtchGrp1(37,3,1)],[new creeTypeMtchGrp1(37,4,0),new creeTypeMtchGrp1(37,4,1)],[new creeTypeMtchGrp1(37,5,0),new creeTypeMtchGrp1(37,5,1)],[new creeTypeMtchGrp1(37,6,0),new creeTypeMtchGrp1(37,6,1)],[new creeTypeMtchGrp1(37,7,0),new creeTypeMtchGrp1(37,7,1)],[new creeTypeMtchGrp1(37,8,0),new creeTypeMtchGrp1(37,8,1)],[new creeTypeMtchGrp1(37,9,0),new creeTypeMtchGrp1(37,9,1)]],				 [[new creeTypeMtchGrp1(38,0,0),new creeTypeMtchGrp1(38,0,1)],[new creeTypeMtchGrp1(38,1,0),new creeTypeMtchGrp1(38,1,1)],[new creeTypeMtchGrp1(38,2,0),new creeTypeMtchGrp1(38,2,1)],[new creeTypeMtchGrp1(38,3,0),new creeTypeMtchGrp1(38,3,1)],[new creeTypeMtchGrp1(38,4,0),new creeTypeMtchGrp1(38,4,1)],[new creeTypeMtchGrp1(38,5,0),new creeTypeMtchGrp1(38,5,1)],[new creeTypeMtchGrp1(38,6,0),new creeTypeMtchGrp1(38,6,1)],[new creeTypeMtchGrp1(38,7,0),new creeTypeMtchGrp1(38,7,1)],[new creeTypeMtchGrp1(38,8,0),new creeTypeMtchGrp1(38,8,1)],[new creeTypeMtchGrp1(38,9,0),new creeTypeMtchGrp1(38,9,1)]]];	// cl[groupe] = classement du groupe	this.cl = [	new creeTypeClsTour1(0),new creeTypeClsTour1(1),new creeTypeClsTour1(2),new creeTypeClsTour1(3),new creeTypeClsTour1(4),new creeTypeClsTour1(5),new creeTypeClsTour1(6),new creeTypeClsTour1(7),new creeTypeClsTour1(8),new creeTypeClsTour1(9),				new creeTypeClsTour1(10),new creeTypeClsTour1(11),new creeTypeClsTour1(12),new creeTypeClsTour1(13),new creeTypeClsTour1(14),new creeTypeClsTour1(15),new creeTypeClsTour1(16),new creeTypeClsTour1(17),new creeTypeClsTour1(18),new creeTypeClsTour1(19),				new creeTypeClsTour1(20),new creeTypeClsTour1(21),new creeTypeClsTour1(22),new creeTypeClsTour1(23),new creeTypeClsTour1(24),new creeTypeClsTour1(25),new creeTypeClsTour1(26),new creeTypeClsTour1(27),new creeTypeClsTour1(28),new creeTypeClsTour1(29),				new creeTypeClsTour1(30),new creeTypeClsTour1(31),new creeTypeClsTour1(32),new creeTypeClsTour1(33),new creeTypeClsTour1(34),new creeTypeClsTour1(35),new creeTypeClsTour1(36),new creeTypeClsTour1(37),new creeTypeClsTour1(38)];	// Jeu en cours    this.gc = indefini; // Groupe courant    this.jc = indefini; // Journée courante    this.mc = indefini; // match courant       	// Méthodes	this.creeGroupes = tour1CreeGroupes;	this.afficheGroupe = tour1AfficheGroupe;	this.afficheMatchesGroupe = tour1AfficheMatchesGroupe;	this.afficheClassmtGroupe = tour1AfficheClassmtGroupe;	this.joueMatch = tour1JoueMatch;	this.enregistrePartie = tour1EnregistrePartie;	this.joueMatchSuivant = tour1JoueMatchSuivant;}//---------------------------------------------------------------------------------------function tour1CreeGroupes(){	var pris=[	false,false,false,false,false,				false,false,false,false,false,				false,false,false,false,false,				false,false,false,false,false,				false,false,false,false,false,				false,false,false,false,false,				false,false,false,false,false,				false,false,false,false,false,				false,false,false,false,false,				false,false,false,false,false,				false,false,false,false,false,				false,false,false,false,false,				false,false,false,false,false,				false,false,false,false,false,				false,false,false,false,false,				false,false,false,false,false,				false,false,false,false,false,				false,false,false,false,false,				false,false,false,false,false,				false,false,false,false,false,				false,false,false,false,false,				false,false,false,false,false,				false,false,false,false,false,				false,false,false,false,false,				false,false,false,false,false,				false,false,false,false,false,				false,false,false,false,false,				false,false,false,false,false,				false,false,false,false,false,				false,false,false,false,false,				false,false,false,false,false,				false,false,false,false,false,				false,false,false,false,false,				false,false,false,false,false,				false,false,false,false,false,				false,false,false,false,false,				false,false,false,false,false,				false,false,false,false,false,				false,false,false,false,false];	for(var npc=nbPays; npc>0; npc--) {		var i=Math.floor(npc*Math.random());		var iii=0;		while(pris[iii]) iii++;		for(var ii=0; ii<i; ii++) {			iii++;			while(pris[iii]) iii++;		}		pris[iii]=true;		this.gp[Math.floor((nbPays-npc)/5)][(nbPays-npc)%5]=iii;	} 	this.gc = 0; 	this.jc = 0; 	this.mc = 0;	// TOUR 01	document.images[idTour].src = pngChmMsg + idPfxMsg + '1' + idSfxMgta + pngExt;    // On masque la sixième ligne du classement	document.images['6cl'].src = pngChmMsg + idVide + pngExt;	document.images['6pt'].src = pngChmMsg + idVide + pngExt;	document.images['6m1'].src = pngChmMsg + idVide + pngExt;	document.images['6m2'].src = pngChmMsg + idVide + pngExt;}//---------------------------------------------------------------------------------------function tour1AfficheClassmtGroupe(g){	this.cl[g].calcule();}//---------------------------------------------------------------------------------------function tour1AfficheMatchesGroupe(g){	if (this.jc<5)		for(var j=0; j<5; j++)			for(var m=0; m<2; m++)				this.gm[g][j][m].affiche();	else		for(var j=5; j<10; j++)			for(var m=0; m<2; m++)				this.gm[g][j][m].affiche();}//---------------------------------------------------------------------------------------function tour1AfficheGroupe(){	document.images['gd'].src = pngChmMsg + idPfxMsg + Math.floor((this.gc+1)/10) + idSfxMgta + pngExt;	document.images['gu'].src = pngChmMsg + idPfxMsg + ((this.gc+1)%10) + idSfxMgta + pngExt;	this.afficheClassmtGroupe(this.gc);	this.afficheMatchesGroupe(this.gc);}//---------------------------------------------------------------------------------------function tour1JoueMatch(){	//alert('jc='+this.jc+' gc='+this.gc+' mc='+this.mc);	match.joueAuto(this.gp[this.gc][mt1[this.jc][this.mc][0]],this.gp[this.gc][mt1[this.jc][this.mc][1]]);}//---------------------------------------------------------------------------------------function tour1JoueMatchSuivant(){	if (this.mc<1) {		this.mc++;		this.afficheGroupe();		this.joueMatch();	}	else {		this.mc = 0;		if (this.jc<9) {			this.jc++;			this.afficheGroupe();			this.joueMatch();		}		else {			var stMsg = 'Qualifiés du groupe '+(this.gc+1)+' : ';			for(var ii=1; ii<=2; ii++)				for(var i=0; i<5; i++)					if (this.cl[this.gc].pos[i]==ii) {						// On affecte dans le groupe du deuxième tour						tour2.gp[Math.floor(this.gc/3)][((2*this.gc)+ii-1)%6]=this.gp[this.gc][i];						stMsg = stMsg + (ii==2?' et ':'') + idPays[this.gp[this.gc][i]][fra] + ' ('+idPays[this.gp[this.gc][i]][iso]+')' + (ii==2?'.':'');					}			//alert(stMsg);			if (this.gc<38) {				this.jc = 0;				this.gc++;				this.afficheGroupe();				this.joueMatch();			}			else {				phase = 2;				tour2.creeGroupes();				tour2.afficheGroupe();				tour2.joueMatch();			}		}	}}//---------------------------------------------------------------------------------------function tour1EnregistrePartie(){	var des = [0,0,0];	for(var i=0; i<10; i++) {		if (match.sm[jogauche][i] != undefined) des[jogauche] = des[jogauche] + match.sm[jogauche][i];		if (match.sm[jodroite][i] != undefined) des[jodroite] = des[jodroite] + match.sm[jodroite][i];	}	//alert('('+match.sm[0]+'),('+match.sm[1]+'),('+match.sm[2]+')\nRésultat : '+match.sp[jogauche]+'-'+match.sp[jodroite]+' ('+des[jogauche]+'-'+des[jodroite]+')');	this.gm[this.gc][this.jc][this.mc].affecte(match.sp[jogauche], match.sp[jodroite], des[jogauche], des[jodroite]);}//---------------------------------------------------------------------------------------// T O U R   2 //---------------------------------------------------------------------------------------//---------------------------------------------------------------------------------------// MATCH GROUPE TOUR 2//---------------------------------------------------------------------------------------function creeTypeMtchGrp2(g, j, m){ // Les équipes sont accessibles depuis les numéros ci-dessous	this.g = g; // N° de groupe pour accès interne	this.j = j;// N° de journée	this.m = m; // N° de match dans la journée  //----------  // Résultats  //----------  	this.sm = [0, 0]; // Manches gagnées par les équipes  	this.sd = [0, 0]; // dés gagnés par les équipes  	this.affecte = mtchGrp2Affecte;  	this.affiche = mtchGrp2Affiche;}//---------------------------------------------------------------------------------------function mtchGrp2Affecte(smg, smd, sdg, sdd) {  	this.sm[0] = smg;  	this.sm[1] = smd;  	this.sd[0] = sdg;  	this.sd[1] = sdd;  	this.affiche();}//---------------------------------------------------------------------------------------function mtchGrp2Affiche(){	// Drapeaux	document.images[(3*(this.j%5)+this.m+1)+'mgd'].src = pngChmFlg + idPays[tour2.gp[this.g][mt2[this.j][this.m][eqgauche]]][png];	document.images[(3*(this.j%5)+this.m+1)+'mdd'].src = pngChmFlg + idPays[tour2.gp[this.g][mt2[this.j][this.m][eqdroite]]][png];	// Scores	document.images[(3*(this.j%5)+this.m+1)+'mgs'].src = pngChmMsg + idPfxMsg + (this.sm[eqgauche]==indefini?idVide:this.sm[eqgauche]) + (this.sm[eqgauche]>this.sm[jodroite]?idSfxMgta:idSfxNoir) + pngExt;	document.images[(3*(this.j%5)+this.m+1)+'mds'].src = pngChmMsg + idPfxMsg + (this.sm[eqdroite]==indefini?idVide:this.sm[eqdroite]) + (this.sm[eqdroite]>this.sm[jogauche]?idSfxMgta:idSfxNoir) + pngExt;	// Dés	document.images[(3*(this.j%5)+this.m+1)+'mgm'].src = pngChmMsg + idPfxMsg + (this.sd[eqgauche]==indefini?idVide:this.sd[eqgauche]) + (this.sd[eqgauche]>this.sd[jodroite]?idSfxMgta:idSfxNoir) + pngExt;	document.images[(3*(this.j%5)+this.m+1)+'mdm'].src = pngChmMsg + idPfxMsg + (this.sd[eqdroite]==indefini?idVide:this.sd[eqdroite]) + (this.sd[eqdroite]>this.sd[jogauche]?idRouge:idSfxNoir) + pngExt;}//---------------------------------------------------------------------------------------// TYPE CLASSEMENT TOUR 2//---------------------------------------------------------------------------------------function creeTypeClsTour2(g){	this.g = g; // Groupe courant	this.pts = [0,0,0,0,0,0]; // Pts : 1 pt par victoire	this.smp = [0,0,0,0,0,0]; // Manches Pour	this.smc = [0,0,0,0,0,0]; // Manches Contre	this.sdp = [0,0,0,0,0,0]; // Dés Pour	this.sdc = [0,0,0,0,0,0]; // Dés Contre	this.pos = [1,1,1,1,1,1]; // Classement (1~6)	this.calcule = clsTour2Calcule;	this.affiche = clsTour2Affiche;}//---------------------------------------------------------------------------------------function clsTour2Affiche(){	for(var p=1; p<=6; p++)		for(var i=0; i<6; i++)			if (this.pos[i]==p) {				//alert(p+'. '+idPays[tour2.gp[this.g][i]][iso]+' avec '+this.pts[i]+' pts, '+this.smp[i]+'-'+this.smc[i]+' ('+this.sdp[i]+'-'+this.sdc[i]+')');				document.images[p+  'p'].src = pngChmFlg + idPays[tour2.gp[this.g][i]][png];				document.images[p+ 'i1'].src = pngChmMsg + idPfxMsg + String(idPays[tour2.gp[this.g][i]][iso]).substring(0,1) + (p<3?idSfxMgta:idSfxNoir) + pngExt;				document.images[p+ 'i2'].src = pngChmMsg + idPfxMsg + String(idPays[tour2.gp[this.g][i]][iso]).substring(1,2) + (p<3?idSfxMgta:idSfxNoir) + pngExt;				document.images[p+ 'i3'].src = pngChmMsg + idPfxMsg + String(idPays[tour2.gp[this.g][i]][iso]).substring(2,3) + (p<3?idSfxMgta:idSfxNoir) + pngExt;				document.images[p+ 'sd'].src = pngChmMsg + idPfxMsg + Math.floor(this.pts[i]/10) + (p<3?idSfxMgta:idSfxNoir) + pngExt;				document.images[p+ 'su'].src = pngChmMsg + idPfxMsg + 			(this.pts[i]%10) + (p<3?idSfxMgta:idSfxNoir) + pngExt;				document.images[p+'mpd'].src = pngChmMsg + idPfxMsg + Math.floor(this.smp[i]/10) + (p<3?idSfxMgta:idSfxNoir) + pngExt;				document.images[p+'mpu'].src = pngChmMsg + idPfxMsg + 			(this.smp[i]%10) + (p<3?idSfxMgta:idSfxNoir) + pngExt;				document.images[p+'mcd'].src = pngChmMsg + idPfxMsg + Math.floor(this.smc[i]/10) + (p<3?idSfxMgta:idSfxNoir) + pngExt;				document.images[p+'mcu'].src = pngChmMsg + idPfxMsg + 			(this.smc[i]%10) + (p<3?idSfxMgta:idSfxNoir) + pngExt;				document.images[p+'dpd'].src = pngChmMsg + idPfxMsg + Math.floor(this.sdp[i]/10) + (p<3?idSfxMgta:idSfxNoir) + pngExt;				document.images[p+'dpu'].src = pngChmMsg + idPfxMsg + 			(this.sdp[i]%10) + (p<3?idSfxMgta:idSfxNoir) + pngExt;				document.images[p+'dcd'].src = pngChmMsg + idPfxMsg + Math.floor(this.sdc[i]/10) + (p<3?idSfxMgta:idSfxNoir) + pngExt;				document.images[p+'dcu'].src = pngChmMsg + idPfxMsg + 			(this.sdc[i]%10) + (p<3?idSfxMgta:idSfxNoir) + pngExt;			}}//---------------------------------------------------------------------------------------function clsTour2Calcule(){	// 0. On initialise	for(var i=0; i<6; i++) {		this.pts[i] = 0;		this.smp[i] = 0;		this.smc[i] = 0;		this.sdp[i] = 0;		this.sdc[i] = 0;		this.pos[i] = 1;	}	// 1. On cumule les points des matches	for(var j=0; j<10; j++)		for(var m=0; m<3; m++) {			if ((tour2.gm[this.g][j][m].sm[eqgauche]>tour2.gm[this.g][j][m].sm[eqdroite])||				((tour2.gm[this.g][j][m].sm[eqgauche]==tour2.gm[this.g][j][m].sm[eqdroite])&&				 (tour2.gm[this.g][j][m].sd[eqgauche]>tour2.gm[this.g][j][m].sd[eqdroite])))				this.pts[mt2[j][m][eqgauche]]++;			if ((tour2.gm[this.g][j][m].sm[eqgauche]<tour2.gm[this.g][j][m].sm[eqdroite])||				((tour2.gm[this.g][j][m].sm[eqgauche]==tour2.gm[this.g][j][m].sm[eqdroite])&&				 (tour2.gm[this.g][j][m].sd[eqgauche]<tour2.gm[this.g][j][m].sd[eqdroite])))				this.pts[mt2[j][m][eqdroite]]++;			for(var eq=0; eq<2; eq++) {				this.smp[mt2[j][m][eq]] += tour2.gm[this.g][j][m].sm[eq];				this.sdp[mt2[j][m][eq]] += tour2.gm[this.g][j][m].sd[eq];				this.smc[mt2[j][m][1-eq]] += tour2.gm[this.g][j][m].sm[eq];				this.sdc[mt2[j][m][1-eq]] += tour2.gm[this.g][j][m].sd[eq];			}		}	// 2. On calcule le classement	for(var i=0; i<6; i++) 		for(var ii=0; ii<6; ii++) 			if ((this.pts[i]<this.pts[ii])||				((this.pts[i]==this.pts[ii])&&(this.smp[i]-this.smc[i]<this.smp[ii]-this.smc[ii]))||				((this.pts[i]==this.pts[ii])&&(this.smp[i]-this.smc[i]==this.smp[ii]-this.smc[ii])&&(this.smp[i]<this.smp[ii]))||				((this.pts[i]==this.pts[ii])&&(this.smp[i]-this.smc[i]==this.smp[ii]-this.smc[ii])&&(this.smp[i]==this.smp[ii])&&(this.sdp[i]-this.sdc[i]<this.sdp[ii]-this.sdc[ii]))||				((this.pts[i]==this.pts[ii])&&(this.smp[i]-this.smc[i]==this.smp[ii]-this.smc[ii])&&(this.smp[i]==this.smp[ii])&&(this.sdp[i]-this.sdc[i]==this.sdp[ii]-this.sdc[ii])&&(this.smp[i]==this.smp[ii])&&(this.sdp[i]<this.sdp[ii]))||				((this.pts[i]==this.pts[ii])&&(this.smp[i]-this.smc[i]==this.smp[ii]-this.smc[ii])&&(this.smp[i]==this.smp[ii])&&(this.sdp[i]-this.sdc[i]==this.sdp[ii]-this.sdc[ii])&&(this.smp[i]==this.smp[ii])&&(this.sdp[i]==this.sdp[ii])&&(i>ii)))					this.pos[i]++;	// 3. Affichage du classement	this.affiche();}//---------------------------------------------------------------------------------------// TYPE TOURNOI TOUR 2//---------------------------------------------------------------------------------------function creeTypeTour2(){	// gp[groupe][equipe] = n°pays	this.gp = [	[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0]];    // gm[groupe][journée][match], journée = 0~9, match = 0|1	this.gm =	[[[new creeTypeMtchGrp2(0,0,0),new creeTypeMtchGrp2(0,0,1),new creeTypeMtchGrp2(0,0,2)],[new creeTypeMtchGrp2(0,1,0),new creeTypeMtchGrp2(0,1,1),new creeTypeMtchGrp2(0,1,2)],[new creeTypeMtchGrp2(0,2,0),new creeTypeMtchGrp2(0,2,1),new creeTypeMtchGrp2(0,2,2)],[new creeTypeMtchGrp2(0,3,0),new creeTypeMtchGrp2(0,3,1),new creeTypeMtchGrp2(0,3,2)],[new creeTypeMtchGrp2(0,4,0),new creeTypeMtchGrp2(0,4,1),new creeTypeMtchGrp2(0,4,2)],[new creeTypeMtchGrp2(0,5,0),new creeTypeMtchGrp2(0,5,1),new creeTypeMtchGrp2(0,5,2)],[new creeTypeMtchGrp2(0,6,0),new creeTypeMtchGrp2(0,6,1),new creeTypeMtchGrp2(0,6,2)],[new creeTypeMtchGrp2(0,7,0),new creeTypeMtchGrp2(0,7,1),new creeTypeMtchGrp2(0,7,2)],[new creeTypeMtchGrp2(0,8,0),new creeTypeMtchGrp2(0,8,1),new creeTypeMtchGrp2(0,8,2)],[new creeTypeMtchGrp2(0,9,0),new creeTypeMtchGrp2(0,9,1),new creeTypeMtchGrp2(0,9,2)]],				 [[new creeTypeMtchGrp2(1,0,0),new creeTypeMtchGrp2(1,0,1),new creeTypeMtchGrp2(1,0,2)],[new creeTypeMtchGrp2(1,1,0),new creeTypeMtchGrp2(1,1,1),new creeTypeMtchGrp2(1,1,2)],[new creeTypeMtchGrp2(1,2,0),new creeTypeMtchGrp2(1,2,1),new creeTypeMtchGrp2(1,2,2)],[new creeTypeMtchGrp2(1,3,0),new creeTypeMtchGrp2(1,3,1),new creeTypeMtchGrp2(1,3,2)],[new creeTypeMtchGrp2(1,4,0),new creeTypeMtchGrp2(1,4,1),new creeTypeMtchGrp2(1,4,2)],[new creeTypeMtchGrp2(1,5,0),new creeTypeMtchGrp2(1,5,1),new creeTypeMtchGrp2(1,5,2)],[new creeTypeMtchGrp2(1,6,0),new creeTypeMtchGrp2(1,6,1),new creeTypeMtchGrp2(1,6,2)],[new creeTypeMtchGrp2(1,7,0),new creeTypeMtchGrp2(1,7,1),new creeTypeMtchGrp2(1,7,2)],[new creeTypeMtchGrp2(1,8,0),new creeTypeMtchGrp2(1,8,1),new creeTypeMtchGrp2(1,8,2)],[new creeTypeMtchGrp2(1,9,0),new creeTypeMtchGrp2(1,9,1),new creeTypeMtchGrp2(1,9,2)]],				 [[new creeTypeMtchGrp2(2,0,0),new creeTypeMtchGrp2(2,0,1),new creeTypeMtchGrp2(2,0,2)],[new creeTypeMtchGrp2(2,1,0),new creeTypeMtchGrp2(2,1,1),new creeTypeMtchGrp2(2,1,2)],[new creeTypeMtchGrp2(2,2,0),new creeTypeMtchGrp2(2,2,1),new creeTypeMtchGrp2(2,2,2)],[new creeTypeMtchGrp2(2,3,0),new creeTypeMtchGrp2(2,3,1),new creeTypeMtchGrp2(2,3,2)],[new creeTypeMtchGrp2(2,4,0),new creeTypeMtchGrp2(2,4,1),new creeTypeMtchGrp2(2,4,2)],[new creeTypeMtchGrp2(2,5,0),new creeTypeMtchGrp2(2,5,1),new creeTypeMtchGrp2(2,5,2)],[new creeTypeMtchGrp2(2,6,0),new creeTypeMtchGrp2(2,6,1),new creeTypeMtchGrp2(2,6,2)],[new creeTypeMtchGrp2(2,7,0),new creeTypeMtchGrp2(2,7,1),new creeTypeMtchGrp2(2,7,2)],[new creeTypeMtchGrp2(2,8,0),new creeTypeMtchGrp2(2,8,1),new creeTypeMtchGrp2(2,8,2)],[new creeTypeMtchGrp2(2,9,0),new creeTypeMtchGrp2(2,9,1),new creeTypeMtchGrp2(2,9,2)]],				 [[new creeTypeMtchGrp2(3,0,0),new creeTypeMtchGrp2(3,0,1),new creeTypeMtchGrp2(3,0,2)],[new creeTypeMtchGrp2(3,1,0),new creeTypeMtchGrp2(3,1,1),new creeTypeMtchGrp2(3,1,2)],[new creeTypeMtchGrp2(3,2,0),new creeTypeMtchGrp2(3,2,1),new creeTypeMtchGrp2(3,2,2)],[new creeTypeMtchGrp2(3,3,0),new creeTypeMtchGrp2(3,3,1),new creeTypeMtchGrp2(3,3,2)],[new creeTypeMtchGrp2(3,4,0),new creeTypeMtchGrp2(3,4,1),new creeTypeMtchGrp2(3,4,2)],[new creeTypeMtchGrp2(3,5,0),new creeTypeMtchGrp2(3,5,1),new creeTypeMtchGrp2(3,5,2)],[new creeTypeMtchGrp2(3,6,0),new creeTypeMtchGrp2(3,6,1),new creeTypeMtchGrp2(3,6,2)],[new creeTypeMtchGrp2(3,7,0),new creeTypeMtchGrp2(3,7,1),new creeTypeMtchGrp2(3,7,2)],[new creeTypeMtchGrp2(3,8,0),new creeTypeMtchGrp2(3,8,1),new creeTypeMtchGrp2(3,8,2)],[new creeTypeMtchGrp2(3,9,0),new creeTypeMtchGrp2(3,9,1),new creeTypeMtchGrp2(3,9,2)]],				 [[new creeTypeMtchGrp2(4,0,0),new creeTypeMtchGrp2(4,0,1),new creeTypeMtchGrp2(4,0,2)],[new creeTypeMtchGrp2(4,1,0),new creeTypeMtchGrp2(4,1,1),new creeTypeMtchGrp2(4,1,2)],[new creeTypeMtchGrp2(4,2,0),new creeTypeMtchGrp2(4,2,1),new creeTypeMtchGrp2(4,2,2)],[new creeTypeMtchGrp2(4,3,0),new creeTypeMtchGrp2(4,3,1),new creeTypeMtchGrp2(4,3,2)],[new creeTypeMtchGrp2(4,4,0),new creeTypeMtchGrp2(4,4,1),new creeTypeMtchGrp2(4,4,2)],[new creeTypeMtchGrp2(4,5,0),new creeTypeMtchGrp2(4,5,1),new creeTypeMtchGrp2(4,5,2)],[new creeTypeMtchGrp2(4,6,0),new creeTypeMtchGrp2(4,6,1),new creeTypeMtchGrp2(4,6,2)],[new creeTypeMtchGrp2(4,7,0),new creeTypeMtchGrp2(4,7,1),new creeTypeMtchGrp2(4,7,2)],[new creeTypeMtchGrp2(4,8,0),new creeTypeMtchGrp2(4,8,1),new creeTypeMtchGrp2(4,8,2)],[new creeTypeMtchGrp2(4,9,0),new creeTypeMtchGrp2(4,9,1),new creeTypeMtchGrp2(4,9,2)]],				 [[new creeTypeMtchGrp2(5,0,0),new creeTypeMtchGrp2(5,0,1),new creeTypeMtchGrp2(5,0,2)],[new creeTypeMtchGrp2(5,1,0),new creeTypeMtchGrp2(5,1,1),new creeTypeMtchGrp2(5,1,2)],[new creeTypeMtchGrp2(5,2,0),new creeTypeMtchGrp2(5,2,1),new creeTypeMtchGrp2(5,2,2)],[new creeTypeMtchGrp2(5,3,0),new creeTypeMtchGrp2(5,3,1),new creeTypeMtchGrp2(5,3,2)],[new creeTypeMtchGrp2(5,4,0),new creeTypeMtchGrp2(5,4,1),new creeTypeMtchGrp2(5,4,2)],[new creeTypeMtchGrp2(5,5,0),new creeTypeMtchGrp2(5,5,1),new creeTypeMtchGrp2(5,5,2)],[new creeTypeMtchGrp2(5,6,0),new creeTypeMtchGrp2(5,6,1),new creeTypeMtchGrp2(5,6,2)],[new creeTypeMtchGrp2(5,7,0),new creeTypeMtchGrp2(5,7,1),new creeTypeMtchGrp2(5,7,2)],[new creeTypeMtchGrp2(5,8,0),new creeTypeMtchGrp2(5,8,1),new creeTypeMtchGrp2(5,8,2)],[new creeTypeMtchGrp2(5,9,0),new creeTypeMtchGrp2(5,9,1),new creeTypeMtchGrp2(5,9,2)]],				 [[new creeTypeMtchGrp2(6,0,0),new creeTypeMtchGrp2(6,0,1),new creeTypeMtchGrp2(6,0,2)],[new creeTypeMtchGrp2(6,1,0),new creeTypeMtchGrp2(6,1,1),new creeTypeMtchGrp2(6,1,2)],[new creeTypeMtchGrp2(6,2,0),new creeTypeMtchGrp2(6,2,1),new creeTypeMtchGrp2(6,2,2)],[new creeTypeMtchGrp2(6,3,0),new creeTypeMtchGrp2(6,3,1),new creeTypeMtchGrp2(6,3,2)],[new creeTypeMtchGrp2(6,4,0),new creeTypeMtchGrp2(6,4,1),new creeTypeMtchGrp2(6,4,2)],[new creeTypeMtchGrp2(6,5,0),new creeTypeMtchGrp2(6,5,1),new creeTypeMtchGrp2(6,5,2)],[new creeTypeMtchGrp2(6,6,0),new creeTypeMtchGrp2(6,6,1),new creeTypeMtchGrp2(6,6,2)],[new creeTypeMtchGrp2(6,7,0),new creeTypeMtchGrp2(6,7,1),new creeTypeMtchGrp2(6,7,2)],[new creeTypeMtchGrp2(6,8,0),new creeTypeMtchGrp2(6,8,1),new creeTypeMtchGrp2(6,8,2)],[new creeTypeMtchGrp2(6,9,0),new creeTypeMtchGrp2(6,9,1),new creeTypeMtchGrp2(6,9,2)]],				 [[new creeTypeMtchGrp2(7,0,0),new creeTypeMtchGrp2(7,0,1),new creeTypeMtchGrp2(7,0,2)],[new creeTypeMtchGrp2(7,1,0),new creeTypeMtchGrp2(7,1,1),new creeTypeMtchGrp2(7,1,2)],[new creeTypeMtchGrp2(7,2,0),new creeTypeMtchGrp2(7,2,1),new creeTypeMtchGrp2(7,2,2)],[new creeTypeMtchGrp2(7,3,0),new creeTypeMtchGrp2(7,3,1),new creeTypeMtchGrp2(7,3,2)],[new creeTypeMtchGrp2(7,4,0),new creeTypeMtchGrp2(7,4,1),new creeTypeMtchGrp2(7,4,2)],[new creeTypeMtchGrp2(7,5,0),new creeTypeMtchGrp2(7,5,1),new creeTypeMtchGrp2(7,5,2)],[new creeTypeMtchGrp2(7,6,0),new creeTypeMtchGrp2(7,6,1),new creeTypeMtchGrp2(7,6,2)],[new creeTypeMtchGrp2(7,7,0),new creeTypeMtchGrp2(7,7,1),new creeTypeMtchGrp2(7,7,2)],[new creeTypeMtchGrp2(7,8,0),new creeTypeMtchGrp2(7,8,1),new creeTypeMtchGrp2(7,8,2)],[new creeTypeMtchGrp2(7,9,0),new creeTypeMtchGrp2(7,9,1),new creeTypeMtchGrp2(7,9,2)]],				 [[new creeTypeMtchGrp2(8,0,0),new creeTypeMtchGrp2(8,0,1),new creeTypeMtchGrp2(8,0,2)],[new creeTypeMtchGrp2(8,1,0),new creeTypeMtchGrp2(8,1,1),new creeTypeMtchGrp2(8,1,2)],[new creeTypeMtchGrp2(8,2,0),new creeTypeMtchGrp2(8,2,1),new creeTypeMtchGrp2(8,2,2)],[new creeTypeMtchGrp2(8,3,0),new creeTypeMtchGrp2(8,3,1),new creeTypeMtchGrp2(8,3,2)],[new creeTypeMtchGrp2(8,4,0),new creeTypeMtchGrp2(8,4,1),new creeTypeMtchGrp2(8,4,2)],[new creeTypeMtchGrp2(8,5,0),new creeTypeMtchGrp2(8,5,1),new creeTypeMtchGrp2(8,5,2)],[new creeTypeMtchGrp2(8,6,0),new creeTypeMtchGrp2(8,6,1),new creeTypeMtchGrp2(8,6,2)],[new creeTypeMtchGrp2(8,7,0),new creeTypeMtchGrp2(8,7,1),new creeTypeMtchGrp2(8,7,2)],[new creeTypeMtchGrp2(8,8,0),new creeTypeMtchGrp2(8,8,1),new creeTypeMtchGrp2(8,8,2)],[new creeTypeMtchGrp2(8,9,0),new creeTypeMtchGrp2(8,9,1),new creeTypeMtchGrp2(8,9,2)]],				 [[new creeTypeMtchGrp2(9,0,0),new creeTypeMtchGrp2(9,0,1),new creeTypeMtchGrp2(9,0,2)],[new creeTypeMtchGrp2(9,1,0),new creeTypeMtchGrp2(9,1,1),new creeTypeMtchGrp2(9,1,2)],[new creeTypeMtchGrp2(9,2,0),new creeTypeMtchGrp2(9,2,1),new creeTypeMtchGrp2(9,2,2)],[new creeTypeMtchGrp2(9,3,0),new creeTypeMtchGrp2(9,3,1),new creeTypeMtchGrp2(9,3,2)],[new creeTypeMtchGrp2(9,4,0),new creeTypeMtchGrp2(9,4,1),new creeTypeMtchGrp2(9,4,2)],[new creeTypeMtchGrp2(9,5,0),new creeTypeMtchGrp2(9,5,1),new creeTypeMtchGrp2(9,5,2)],[new creeTypeMtchGrp2(9,6,0),new creeTypeMtchGrp2(9,6,1),new creeTypeMtchGrp2(9,6,2)],[new creeTypeMtchGrp2(9,7,0),new creeTypeMtchGrp2(9,7,1),new creeTypeMtchGrp2(9,7,2)],[new creeTypeMtchGrp2(9,8,0),new creeTypeMtchGrp2(9,8,1),new creeTypeMtchGrp2(9,8,2)],[new creeTypeMtchGrp2(9,9,0),new creeTypeMtchGrp2(9,9,1),new creeTypeMtchGrp2(9,9,2)]],				 [[new creeTypeMtchGrp2(10,0,0),new creeTypeMtchGrp2(10,0,1),new creeTypeMtchGrp2(10,0,2)],[new creeTypeMtchGrp2(10,1,0),new creeTypeMtchGrp2(10,1,1),new creeTypeMtchGrp2(10,1,2)],[new creeTypeMtchGrp2(10,2,0),new creeTypeMtchGrp2(10,2,1),new creeTypeMtchGrp2(10,2,2)],[new creeTypeMtchGrp2(10,3,0),new creeTypeMtchGrp2(10,3,1),new creeTypeMtchGrp2(10,3,2)],[new creeTypeMtchGrp2(10,4,0),new creeTypeMtchGrp2(10,4,1),new creeTypeMtchGrp2(10,4,2)],[new creeTypeMtchGrp2(10,5,0),new creeTypeMtchGrp2(10,5,1),new creeTypeMtchGrp2(10,5,2)],[new creeTypeMtchGrp2(10,6,0),new creeTypeMtchGrp2(10,6,1),new creeTypeMtchGrp2(10,6,2)],[new creeTypeMtchGrp2(10,7,0),new creeTypeMtchGrp2(10,7,1),new creeTypeMtchGrp2(10,7,2)],[new creeTypeMtchGrp2(10,8,0),new creeTypeMtchGrp2(10,8,1),new creeTypeMtchGrp2(10,8,2)],[new creeTypeMtchGrp2(10,9,0),new creeTypeMtchGrp2(10,9,1),new creeTypeMtchGrp2(10,9,2)]],				 [[new creeTypeMtchGrp2(11,0,0),new creeTypeMtchGrp2(11,0,1),new creeTypeMtchGrp2(11,0,2)],[new creeTypeMtchGrp2(11,1,0),new creeTypeMtchGrp2(11,1,1),new creeTypeMtchGrp2(11,1,2)],[new creeTypeMtchGrp2(11,2,0),new creeTypeMtchGrp2(11,2,1),new creeTypeMtchGrp2(11,2,2)],[new creeTypeMtchGrp2(11,3,0),new creeTypeMtchGrp2(11,3,1),new creeTypeMtchGrp2(11,3,2)],[new creeTypeMtchGrp2(11,4,0),new creeTypeMtchGrp2(11,4,1),new creeTypeMtchGrp2(11,4,2)],[new creeTypeMtchGrp2(11,5,0),new creeTypeMtchGrp2(11,5,1),new creeTypeMtchGrp2(11,5,2)],[new creeTypeMtchGrp2(11,6,0),new creeTypeMtchGrp2(11,6,1),new creeTypeMtchGrp2(11,6,2)],[new creeTypeMtchGrp2(11,7,0),new creeTypeMtchGrp2(11,7,1),new creeTypeMtchGrp2(11,7,2)],[new creeTypeMtchGrp2(11,8,0),new creeTypeMtchGrp2(11,8,1),new creeTypeMtchGrp2(11,8,2)],[new creeTypeMtchGrp2(11,9,0),new creeTypeMtchGrp2(11,9,1),new creeTypeMtchGrp2(11,9,2)]],				 [[new creeTypeMtchGrp2(12,0,0),new creeTypeMtchGrp2(12,0,1),new creeTypeMtchGrp2(12,0,2)],[new creeTypeMtchGrp2(12,1,0),new creeTypeMtchGrp2(12,1,1),new creeTypeMtchGrp2(12,1,2)],[new creeTypeMtchGrp2(12,2,0),new creeTypeMtchGrp2(12,2,1),new creeTypeMtchGrp2(12,2,2)],[new creeTypeMtchGrp2(12,3,0),new creeTypeMtchGrp2(12,3,1),new creeTypeMtchGrp2(12,3,2)],[new creeTypeMtchGrp2(12,4,0),new creeTypeMtchGrp2(12,4,1),new creeTypeMtchGrp2(12,4,2)],[new creeTypeMtchGrp2(12,5,0),new creeTypeMtchGrp2(12,5,1),new creeTypeMtchGrp2(12,5,2)],[new creeTypeMtchGrp2(12,6,0),new creeTypeMtchGrp2(12,6,1),new creeTypeMtchGrp2(12,6,2)],[new creeTypeMtchGrp2(12,7,0),new creeTypeMtchGrp2(12,7,1),new creeTypeMtchGrp2(12,7,2)],[new creeTypeMtchGrp2(12,8,0),new creeTypeMtchGrp2(12,8,1),new creeTypeMtchGrp2(12,8,2)],[new creeTypeMtchGrp2(12,9,0),new creeTypeMtchGrp2(12,9,1),new creeTypeMtchGrp2(12,9,2)]]];	// cl[groupe] = classement du groupe	this.cl = [	new creeTypeClsTour2(0),new creeTypeClsTour2(1),new creeTypeClsTour2(2),new creeTypeClsTour2(3),new creeTypeClsTour2(4),new creeTypeClsTour2(5),new creeTypeClsTour2(6),				new creeTypeClsTour2(7),new creeTypeClsTour2(8),new creeTypeClsTour2(9),new creeTypeClsTour2(10),new creeTypeClsTour2(11),new creeTypeClsTour2(12)];	// Jeu en cours    this.gc = indefini; // Groupe courant    this.jc = indefini; // Journée courante    this.mc = indefini; // match courant       	// Méthodes	this.creeGroupes = tour2CreeGroupes;	this.afficheGroupe = tour2AfficheGroupe;	this.afficheMatchesGroupe = tour2AfficheMatchesGroupe;	this.afficheClassmtGroupe = tour2AfficheClassmtGroupe;	this.joueMatch = tour2JoueMatch;	this.enregistrePartie = tour2EnregistrePartie;	this.joueMatchSuivant = tour2JoueMatchSuivant;}//---------------------------------------------------------------------------------------function tour2CreeGroupes(){	// Equipes déjà affectées lors des qualifications 	this.gc = 0; 	this.jc = 0; 	this.mc = 0;	// TOUR 02	document.images[idTour].src = pngChmMsg + idPfxMsg + '2' + idSfxMgta + pngExt;    // On affiche la sixième ligne du classement	document.images['6cl'].src = pngChmMsg + idPfxMsg + '6' + idSfxNoir + pngExt;	document.images['6pt'].src = pngChmMsg + idPfxMsg + idPoint + idSfxNoir + pngExt;	document.images['6m1'].src = pngChmMsg + idPfxMsg + idMoins + idSfxNoir + pngExt;	document.images['6m2'].src = pngChmMsg + idPfxMsg + idMoins + idSfxNoir + pngExt;}//---------------------------------------------------------------------------------------function tour2AfficheClassmtGroupe(g){	this.cl[g].calcule();}//---------------------------------------------------------------------------------------function tour2AfficheMatchesGroupe(g){	if (this.jc<5)		for(var j=0; j<5; j++)			for(var m=0; m<3; m++)				this.gm[g][j][m].affiche();	else		for(var j=5; j<10; j++)			for(var m=0; m<3; m++)				this.gm[g][j][m].affiche();}//---------------------------------------------------------------------------------------function tour2AfficheGroupe(){	document.images['gd'].src = pngChmMsg + idPfxMsg + String.fromCharCode(65+this.gc) + idSfxMgta + pngExt;	document.images['gu'].src = pngChmMsg + idVide + pngExt;	this.afficheClassmtGroupe(this.gc);	this.afficheMatchesGroupe(this.gc);}//---------------------------------------------------------------------------------------function tour2JoueMatch(){	//alert('jc='+this.jc+' gc='+this.gc+' mc='+this.mc);	match.joueAuto(this.gp[this.gc][mt2[this.jc][this.mc][0]],this.gp[this.gc][mt2[this.jc][this.mc][1]]);}//---------------------------------------------------------------------------------------function tour2JoueMatchSuivant(){	if (this.mc<2) {		this.mc++;		this.afficheGroupe();		this.joueMatch();	}	else {		this.mc = 0;		if (this.jc<9) {			this.jc++;			this.afficheGroupe();			this.joueMatch();		}		else {			var stMsg = 'Qualifiés du groupe '+String.fromCharCode(65+this.gc)+' : ';			for(var ii=1; ii<=2; ii++)				for(var i=0; i<6; i++)					if (this.cl[this.gc].pos[i]==ii) {						if (ii==1)							elim.gp[seiziemes][2*this.gc]=this.gp[this.gc][i];						else							elim.gp[seiziemes][31-2*this.gc]=this.gp[this.gc][i];						stMsg = stMsg + (ii==2?' et ':'') + idPays[this.gp[this.gc][i]][fra] + ' ('+idPays[this.gp[this.gc][i]][iso]+')' + (ii==2?'.':'');					}			//alert(stMsg);			if (this.gc<12) {				this.jc = 0;				this.gc++;				this.afficheGroupe();				this.joueMatch();			}			else {				// On trouve les 6 meilleurs troisièmes				var pos = [1,1,1,1,1,1,1,1,1,1,1,1,1];				var eq3 = [0,0,0,0,0,0,0,0,0,0,0,0,0];				// 2. On calcule le classement				var k, kk;				var stMsg3 = ' Les troisièmes sont';				for(var i=0; i<13; i++) {					for(var j=0; j<6; j++)						if (this.cl[i].pos[j]==3) { 							k=j; 							eq3[i]=this.gp[i][k];							stMsg3 = stMsg3 + ' ' + idPays[eq3[i]][iso];							break; 						}					for(var ii=0; ii<13; ii++) {						for(var jj=0; jj<6; jj++)							if (this.cl[ii].pos[jj]==3) { 								kk=jj; 								break; 							}						if ((this.cl[i].pts[k]<this.cl[ii].pts[kk])||							((this.cl[i].pts[k]==this.cl[ii].pts[kk])&&(this.cl[i].smp[k]-this.cl[i].smc[k]<this.cl[ii].smp[kk]-this.cl[ii].smc[kk]))||							((this.cl[i].pts[k]==this.cl[ii].pts[kk])&&(this.cl[i].smp[k]-this.cl[i].smc[k]==this.cl[ii].smp[kk]-this.cl[ii].smc[kk])&&(this.cl[i].smp[k]<this.cl[ii].smp[kk]))||							((this.cl[i].pts[k]==this.cl[ii].pts[kk])&&(this.cl[i].smp[k]-this.cl[i].smc[k]==this.cl[ii].smp[kk]-this.cl[ii].smc[kk])&&(this.cl[i].smp[k]==this.cl[ii].smp[kk])&&(this.cl[i].sdp[k]-this.cl[i].sdc[k]<this.cl[ii].sdp[kk]-this.cl[ii].sdc[kk]))||							((this.cl[i].pts[k]==this.cl[ii].pts[kk])&&(this.cl[i].smp[k]-this.cl[i].smc[k]==this.cl[ii].smp[kk]-this.cl[ii].smc[kk])&&(this.cl[i].smp[k]==this.cl[ii].smp[kk])&&(this.cl[i].sdp[k]-this.cl[i].sdc[k]==this.cl[ii].sdp[kk]-this.cl[ii].sdc[kk])&&(this.cl[i].smp[k]==this.cl[ii].smp[kk])&&(this.cl[i].sdp[k]<this.cl[ii].sdp[kk]))||							((this.cl[i].pts[k]==this.cl[ii].pts[kk])&&(this.cl[i].smp[k]-this.cl[i].smc[k]==this.cl[ii].smp[kk]-this.cl[ii].smc[kk])&&(this.cl[i].smp[k]==this.cl[ii].smp[kk])&&(this.cl[i].sdp[k]-this.cl[i].sdc[k]==this.cl[ii].sdp[kk]-this.cl[ii].sdc[kk])&&(this.cl[i].smp[k]==this.cl[ii].smp[kk])&&(this.cl[i].sdp[k]==this.cl[ii].sdp[kk])&&(i>ii)))								pos[i]++;						}					}				//alert(stMsg3);				//alert(pos);				// On attribue les 6 dernières places				var stMsg = 'Les 6 meilleurs troisièmes qualifiés sont : ';				for(var l=1; l<=6; l++)					for(var ll=0; ll<13; ll++)						if (pos[ll]==l) {							stMsg = stMsg + (l>1?', ':'') + idPays[eq3[ll]][fra] + ' ('+idPays[eq3[ll]][iso]+')';							if (l%2>0)								elim.gp[seiziemes][26+2*Math.floor((l-1)/2)]=eq3[ll];							else								elim.gp[seiziemes][5-2*Math.floor((l-1)/2)]=eq3[ll];							break;						}				//alert(stMsg);				//alert(elim.gp[seiziemes]);				phase = 3;				elim.cree();				elim.affiche();				elim.joueMatch();			}		}	}}//---------------------------------------------------------------------------------------function tour2EnregistrePartie(){	var des = [0,0,0];	for(var i=0; i<10; i++) {		if (match.sm[jogauche][i] != undefined) des[jogauche] = des[jogauche] + match.sm[jogauche][i];		if (match.sm[jodroite][i] != undefined) des[jodroite] = des[jodroite] + match.sm[jodroite][i];	}	//alert('('+match.sm[0]+'),('+match.sm[1]+'),('+match.sm[2]+')\nRésultat : '+match.sp[jogauche]+'-'+match.sp[jodroite]+' ('+des[jogauche]+'-'+des[jodroite]+')');	this.gm[this.gc][this.jc][this.mc].affecte(match.sp[jogauche], match.sp[jodroite], des[jogauche], des[jodroite]);}//---------------------------------------------------------------------------------------// E L I M I N A T O I R E S //---------------------------------------------------------------------------------------//---------------------------------------------------------------------------------------// TYPE MATCH d'ELIMINATOIRES//---------------------------------------------------------------------------------------function creeTypeMtchElim(nf, mc){ // Les équipes sont accessibles depuis les numéros ci-dessous	this.nf = nf; // Niveau de finale : 0=1/16, 1=1/8 ... 4=finale	this.mc = mc; // N° de match dans le niveau de finale  	this.sm = [[0,0],[0,0]]; // Manches gagnées par les équipes sm[aller=0, retour=1][equipe]  	this.sd = [[0,0],[0,0]]; // dés gagnés par les équipes  	this.affecte = mtchElimAffecte;  	this.affiche = mtchElimAffiche;}//---------------------------------------------------------------------------------------function mtchElimAffecte(ar, smg, smd, sdg, sdd) {  	this.sm[ar][0] = smg;  	this.sm[ar][1] = smd;  	this.sd[ar][0] = sdg;  	this.sd[ar][1] = sdd;  	if (ar==aller) this.affiche();}//---------------------------------------------------------------------------------------function mtchElimAffiche(){ // On n'affiche que les allers car si les retours se jouent il faut garder les scores des allers affichés (s?[0][eq...])	// Drapeaux 	document.images[this.mc+'mgd'].src = pngChmFlg + idPays[elim.gp[this.nf][mte[aller][this.nf][this.mc][eqgauche]]][png];	document.images[this.mc+'mdd'].src = pngChmFlg + idPays[elim.gp[this.nf][mte[aller][this.nf][this.mc][eqdroite]]][png];	// Scores	document.images[this.mc+'mgs'].src = pngChmMsg + idPfxMsg + (this.sm[0][eqgauche]==indefini?idVide:this.sm[0][eqgauche]) + (this.sm[0][eqgauche]>this.sm[0][jodroite]?idSfxMgta:idSfxNoir) + pngExt;	document.images[this.mc+'mds'].src = pngChmMsg + idPfxMsg + (this.sm[0][eqdroite]==indefini?idVide:this.sm[0][eqdroite]) + (this.sm[0][eqdroite]>this.sm[0][jogauche]?idSfxMgta:idSfxNoir) + pngExt;	// Dés	document.images[this.mc+'mgm'].src = pngChmMsg + idPfxMsg + (this.sd[0][eqgauche]==indefini?idVide:this.sd[0][eqgauche]) + (this.sd[0][eqgauche]>this.sd[0][jodroite]?idSfxMgta:idSfxNoir) + pngExt;	document.images[this.mc+'mdm'].src = pngChmMsg + idPfxMsg + (this.sd[0][eqdroite]==indefini?idVide:this.sd[0][eqdroite]) + (this.sd[0][eqdroite]>this.sd[0][jogauche]?idRouge:idSfxNoir) + pngExt;}//---------------------------------------------------------------------------------------// TYPE ELIMINATOIRES//---------------------------------------------------------------------------------------function creeTypeElim(){	// gp[niveau_finale][equipe] = n°pays	this.gp = [	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 				 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 1/16e de finales (0)				[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], // 1/8e de finales (1)				[0,0,0,0,0,0,0,0],[0,0,0,0],[0,0]];// 1/4, 1/2 et finale (2,3,4)    // gm[niveau_finale][match], journée = 0~9, match = 0..15/7/3/1 ; gm = aller & retours	this.gm =	[[new creeTypeMtchElim(0, 0),new creeTypeMtchElim(0, 1),new creeTypeMtchElim(0, 2),new creeTypeMtchElim(0, 3),				  new creeTypeMtchElim(0, 4),new creeTypeMtchElim(0, 5),new creeTypeMtchElim(0, 6),new creeTypeMtchElim(0, 7),				  new creeTypeMtchElim(0, 8),new creeTypeMtchElim(0, 9),new creeTypeMtchElim(0,10),new creeTypeMtchElim(0,11),				  new creeTypeMtchElim(0,12),new creeTypeMtchElim(0,13),new creeTypeMtchElim(0,14),new creeTypeMtchElim(0,15)],				 [new creeTypeMtchElim(1, 0),new creeTypeMtchElim(1, 1),new creeTypeMtchElim(1, 2),new creeTypeMtchElim(1, 3),				  new creeTypeMtchElim(1, 4),new creeTypeMtchElim(1, 5),new creeTypeMtchElim(1, 6),new creeTypeMtchElim(1, 7)],				 [new creeTypeMtchElim(2, 0),new creeTypeMtchElim(2, 1),new creeTypeMtchElim(2, 2),new creeTypeMtchElim(2, 3)],				 [new creeTypeMtchElim(3, 0),new creeTypeMtchElim(3, 1)],[new creeTypeMtchElim(4, 0)]];	// Jeu en cours    this.nf = indefini; // Niveau de finale courant : 0=1/16, 1=1/8, 2=1/4, 3=1/2, 4=Finale    this.mc = indefini; // match courant           this.ar = indefini; // Aller = 0 retour = 1;	// Méthodes	this.cree = eliminatoiresCree;	this.affiche = eliminatoiresAffiche;	this.joueMatch = eliminatoiresJoueMatch;	this.enregistrePartie = eliminatoiresEnregistrePartie;	this.joueMatchSuivant = eliminatoiresJoueMatchSuivant;}//---------------------------------------------------------------------------------------function eliminatoiresCree(){	// Equipes déjà affectées lors des qualifications 	this.nf = seiziemes; 	this.mc = 0;	document.images[idTour].src = pngChmMsg + idPfxMsg + '3' + idSfxMgta + pngExt;	// On change "GROUPE NN" par "1/XX FINALE"	document.images['g1'].src = pngChmMsg + idPfxMsg + '1' + idSfxMgta + pngExt;	document.images['g2'].src = pngChmMsg + idPfxMsg + idSlash + idSfxMgta + pngExt;	document.images['g3'].src = pngChmMsg + idPfxMsg + '1' + idSfxMgta + pngExt;	document.images['g4'].src = pngChmMsg + idPfxMsg + '6' + idSfxMgta + pngExt;	document.images['g5'].src = pngChmMsg + idVide + pngExt;	document.images['g6'].src = pngChmMsg + idPfxMsg + 'F' + idSfxMgta + pngExt;	document.images['g7'].src = pngChmMsg + idPfxMsg + 'I' + idSfxMgta + pngExt;	document.images['g8'].src = pngChmMsg + idPfxMsg + 'N' + idSfxMgta + pngExt;	document.images['g9'].src = pngChmMsg + idPfxMsg + 'A' + idSfxMgta + pngExt;	document.images['gd'].src = pngChmMsg + idPfxMsg + 'L' + idSfxMgta + pngExt;	document.images['gu'].src = pngChmMsg + idPfxMsg + 'E' + idSfxMgta + pngExt;	// On masque le classement	for(var p=1; p<=6; p++) {		document.images[p+ 'cl'].src = pngChm + idVide + pngExt;		document.images[p+ 'pt'].src = pngChm + idVide + pngExt;		document.images[p+ 'm1'].src = pngChm + idVide + pngExt;		document.images[p+ 'm2'].src = pngChm + idVide + pngExt;		document.images[p+  'p'].src = pngChm + idVide + pngExt;		document.images[p+ 'i1'].src = pngChm + idVide + pngExt;		document.images[p+ 'i2'].src = pngChm + idVide + pngExt;		document.images[p+ 'i3'].src = pngChm + idVide + pngExt;		document.images[p+ 'sd'].src = pngChm + idVide + pngExt;		document.images[p+ 'su'].src = pngChm + idVide + pngExt;		document.images[p+'mpd'].src = pngChm + idVide + pngExt;		document.images[p+'mpu'].src = pngChm + idVide + pngExt;		document.images[p+'mcd'].src = pngChm + idVide + pngExt;		document.images[p+'mcu'].src = pngChm + idVide + pngExt;		document.images[p+'dpd'].src = pngChm + idVide + pngExt;		document.images[p+'dpu'].src = pngChm + idVide + pngExt;		document.images[p+'dcd'].src = pngChm + idVide + pngExt;		document.images[p+'dcu'].src = pngChm + idVide + pngExt;	}}//---------------------------------------------------------------------------------------function eliminatoiresAffiche(){	// Niveau de finale	if (this.nf == finale) {		document.images['g1'].src = pngChm + idVide + pngExt;		document.images['g2'].src = pngChm + idVide + pngExt;		document.images['g3'].src = pngChm + idVide + pngExt;		document.images['g4'].src = pngChm + idVide + pngExt;	} else {		document.images['g1'].src = pngChmMsg + idPfxMsg + '1' + idSfxMgta + pngExt;		document.images['g2'].src = pngChmMsg + idPfxMsg + idSlash + idSfxMgta + pngExt;		if (this.nf>seiziemes)			document.images['g4'].src = pngChmMsg + idPfxMsg + this.gm[this.nf].length + idSfxMgta + pngExt;		document.images['g5'].src = pngChm + idVide + pngExt;	}	// Matches	alert(this.gm[this.nf].length);	for(var m=0; m<15; m++) // On n'affiche pas le dernier seizième de finale		if (m<this.gm[this.nf].length)			this.gm[this.nf][m].affiche();		else { // On efface le reste			document.images[m+'mgd'].src = pngChm + idVide + pngExt;			document.images[m+'mdd'].src = pngChm + idVide + pngExt;			document.images[m+'mgs'].src = pngChm + idVide + pngExt;			document.images[m+'mds'].src = pngChm + idVide + pngExt;			document.images[m+'mgm'].src = pngChm + idVide + pngExt;			document.images[m+'mdm'].src = pngChm + idVide + pngExt;		}}//---------------------------------------------------------------------------------------function eliminatoiresJoueMatch(){ 	//alert('nf='+this.nf+' ar='+this.ar); 	match.joueAuto(this.gp[this.nf][mte[this.ar][this.nf][this.mc][0]],this.gp[this.nf][mte[this.ar][this.nf][this.mc][1]]);}//---------------------------------------------------------------------------------------function eliminatoiresJoueMatchSuivant(){	if (this.ar == retour) {		var stMsg = 'Vainqueur : ';		if (this.gm[this.nf][this.mc].sm[aller][eqgauche]+this.gm[this.nf][this.mc].sm[retour][eqgauche] > this.gm[this.nf][this.mc].sm[aller][eqdroite]+this.gm[this.nf][this.mc].sm[retour][eqdroite])			vq = eqgauche;		else			if (this.gm[this.nf][this.mc].sm[aller][eqgauche]+this.gm[this.nf][this.mc].sm[retour][eqgauche] < this.gm[this.nf][this.mc].sm[aller][eqdroite]+this.gm[this.nf][this.mc].sm[retour][eqdroite])				vq = eqdroite;			else				if (this.gm[this.nf][this.mc].sd[aller][eqgauche]+this.gm[this.nf][this.mc].sd[retour][eqgauche] > this.gm[this.nf][this.mc].sd[aller][eqdroite]+this.gm[this.nf][this.mc].sd[retour][eqdroite])					vq = eqgauche;				else					if (this.gm[this.nf][this.mc].sd[aller][eqgauche]+this.gm[this.nf][this.mc].sd[retour][eqgauche] < this.gm[this.nf][this.mc].sd[aller][eqdroite]+this.gm[this.nf][this.mc].sd[retour][eqdroite])						vq = eqdroite;					else 						if (Math.max(this.gm[this.nf][this.mc].sm[aller][eqgauche],this.gm[this.nf][this.mc].sm[retour][eqgauche]) > Math.max(this.gm[this.nf][this.mc].sm[aller][eqdroite],this.gm[this.nf][this.mc].sm[retour][eqdroite]))							vq = eqgauche;						else							if (Math.max(this.gm[this.nf][this.mc].sm[aller][eqgauche],this.gm[this.nf][this.mc].sm[retour][eqgauche]) < Math.max(this.gm[this.nf][this.mc].sm[aller][eqdroite],this.gm[this.nf][this.mc].sm[retour][eqdroite]))								vq = eqdroite;							else								if (Math.max(this.gm[this.nf][this.mc].sd[aller][eqgauche],this.gm[this.nf][this.mc].sd[retour][eqgauche]) > Math.max(this.gm[this.nf][this.mc].sd[aller][eqdroite],this.gm[this.nf][this.mc].sd[retour][eqdroite]))									vq = eqgauche;								else									if (Math.max(this.gm[this.nf][this.mc].sd[aller][eqgauche],this.gm[this.nf][this.mc].sd[retour][eqgauche]) < Math.max(this.gm[this.nf][this.mc].sd[aller][eqdroite],this.gm[this.nf][this.mc].sd[retour][eqdroite]))										vq = eqdroite;									else // tirage au sort										vq = Math.floor(2*Math.random()/2);		if (this.nf < finale) // On qualifie le vainqueur			this.gp[this.nf+1][Math.floor(this.mc/2)] = this.gp[this.nf][mte[this.ar][this.nf][this.mc][vq]];										stMsg = stMsg + idPays[this.gp[this.nf][mte[this.ar][this.nf][this.mc][vq]]][fra] + ' ('+idPays[this.gp[this.nf][mte[this.ar][this.nf][this.mc][vq]]][iso]+').';		alert(stMsg);	}	if (this.mc < this.gm[this.nf].length-1) {		this.mc++;		this.joueMatch();	}	else {		this.mc = 0;		if (this.ar < retour) {			this.ar++;			this.joueMatch();		} else {			this.ar = aller;			if (this.nf < finale) {				this.nf++;				this.affiche();			} else {				stMsg = 'CHAMPION DU MONDE : '+idPays[this.gp[this.nf][mte[this.ar][this.nf][this.mc][vq]]][fra] + ' ('+idPays[this.gp[this.nf][mte[this.ar][this.nf][this.mc][vq]]][iso]+').';			}		}	}}//---------------------------------------------------------------------------------------function eliminatoiresEnregistrePartie(){	var des = [0,0,0];	for(var i=0; i<10; i++) {		if (match.sm[jogauche][i] != undefined) des[jogauche] = des[jogauche] + match.sm[jogauche][i];		if (match.sm[jodroite][i] != undefined) des[jodroite] = des[jodroite] + match.sm[jodroite][i];	}	this.gm[this.nf][this.mc].affecte(this.ar, match.sp[jogauche], match.sp[jodroite], des[jogauche], des[jodroite]);}//---------------------------------------------------------------------------------------// EVENEMENT CLIC//---------------------------------------------------------------------------------------function clic(x){ 	if ((match == undefined) || (match.automate())) return; 	if (x==0) // bouton STOP		stoppeDes();	else		if ((x>=1)&&(x<=9)&&stopDes&&(!match.stopPartie)) { // un des neuf dés			choisitDe(parseInt(x)-1);		}		else if ((x==10)&&stopDes&&(!match.stopPartie)) {			match.changeCamp();		}}//---------------------------------------------------------------------------------------function clicAuto(x){ 	if (x==0) // bouton STOP		stoppeDes();	else		if ((x>=1)&&(x<=9)&&stopDes&&(!match.stopPartie)) { // un des neuf dés			choisitDe(parseInt(x)-1);		}		else if ((x==10)&&stopDes&&(!match.stopPartie)) {			match.changeCamp();		}}//---------------------------------------------------------------------------------------// PROGRAMME PRINCIPAL//---------------------------------------------------------------------------------------function bienvenue(){ //match.joueAuto(Math.floor(idPays.length*Math.random()), Math.floor(idPays.length*Math.random())); phase = 1; tour1.creeGroupes(); tour1.afficheGroupe(); tour1.joueMatch();}